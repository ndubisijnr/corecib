{"remainingRequest":"/Users/clark/Desktop/business.corestep.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/clark/Desktop/business.corestep.com/src/components/form/EditOrganisationUser.vue?vue&type=style&index=0&id=2c52499a&scoped=true&lang=css&","dependencies":[{"path":"/Users/clark/Desktop/business.corestep.com/src/components/form/EditOrganisationUser.vue","mtime":1703762794716},{"path":"/Users/clark/Desktop/business.corestep.com/node_modules/css-loader/dist/cjs.js","mtime":1670880042824},{"path":"/Users/clark/Desktop/business.corestep.com/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1670880044043},{"path":"/Users/clark/Desktop/business.corestep.com/node_modules/postcss-loader/src/index.js","mtime":1670880043297},{"path":"/Users/clark/Desktop/business.corestep.com/node_modules/cache-loader/dist/cjs.js","mtime":1670880017776},{"path":"/Users/clark/Desktop/business.corestep.com/node_modules/vue-loader/lib/index.js","mtime":1670880044043}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jYXJkLWhlYWR7CiAgYmFja2dyb3VuZC1jb2xvcjogI0Q3RTZGMzsKICBjb2xvcjogd2hpdGU7Cn0K"},{"version":3,"sources":["EditOrganisationUser.vue"],"names":[],"mappings":";AAwHA;AACA;AACA;AACA","file":"EditOrganisationUser.vue","sourceRoot":"src/components/form","sourcesContent":["<template>\n  <modal-1 :show=\"showOrganisationUserForm === 'edit' && showModal\" body-classes=\"p-1\" modal-classes=\"modal-dialog-centered modal-md\">\n    <div v-if=\"singleUserPayload\">\n      <div class=\"card-head\">\n        <div class=\"d-flex justify-content-between\">\n          <h4 style=\"color:#3F88C5;font-size:18px;font-weight:700;width: 100%;display: flex;justify-content: center;align-items: center\">Edit User</h4>\n          <button type=\"button\" class=\"btn-close p-2 m-2\" @click=\"closeModal()\" title=\"Cancel Request Payout\"></button>\n        </div>\n      </div>\n\n<!--      <div class=\"card-head\">-->\n<!--        <div class=\"text-end\">-->\n<!--          <button type=\"button\" class=\"btn-close p-2 m-2\" @click=\"closeModal()\"></button>-->\n<!--        </div>-->\n<!--        <div class=\"\"></div>-->\n<!--      </div>-->\n      <div class=\"card-body\">\n        <div class=\"form\">\n          <b-form class=\"bform2 text-left\" @submit.prevent=\"updateUser()\">\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <b-form-group id=\"input-group-4\" label=\"Full Name\" label-for=\"input-4\">\n                  <b-form-input id=\"input-4\" disabled  placeholder=\"Organisation name\" :value=\"singleUserPayload.customerFirstName + ' ' + singleUserPayload.customerLastName\" class=\"mr-2\" required></b-form-input>\n                </b-form-group>\n              </div>\n              <div class=\"col-6\">\n                <b-form-group label=\"User Role\">\n                  <base-input>\n                    <el-select class=\"select-danger\" filterable placeholder=\"Select user role\" required  v-model=\"singleUserPayload.customerOrganisationStatus\">\n                      <el-option :value=\"singleUserPayload.customerOrganisationStatus === 'ACTIVE' ? singleUserPayload.customerOrganisationStatus : 'ACTIVE'\" :label=\"singleUserPayload.customerOrganisationStatus === 'ACTIVE' ? singleUserPayload.customerOrganisationStatus : 'ACTIVE'\" class=\"select-danger\"></el-option>\n                      <el-option :value=\"singleUserPayload.customerOrganisationStatus === 'INACTIVE'? singleUserPayload.customerOrganisationStatus : 'INACTIVE'\" :label=\"singleUserPayload.customerOrganisationStatus === 'INACTIVE'? singleUserPayload.customerOrganisationStatus : 'INACTIVE'\" class=\"select-danger\"></el-option>\n                    </el-select>\n                  </base-input>\n                </b-form-group>\n<!--                <b-form-group id=\"input-group-4\" label=\"Status\" label-for=\"input-4\">-->\n<!--                  <b-form-input id=\"input-4\" disabled  placeholder=\"status\" :value=\"singleUserPayload.customerOrganisationStatus\" class=\"mr-2\" required></b-form-input>-->\n<!--                </b-form-group>-->\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <b-form-group id=\"input-group-4\" label=\"User Id\" label-for=\"input-4\">\n                  <b-form-input id=\"input-4\" disabled type=\"number\" placeholder=\"Account Number\" :value=\"singleUserPayload.customerId\" class=\"mr-2\" required></b-form-input>\n                </b-form-group>\n              </div>\n              <div class=\"col-6\">\n                <b-form-group id=\"input-group-4\" label=\"Email\" label-for=\"input-4\">\n                  <b-form-input id=\"input-4\" disabled  placeholder=\"organisation email\" :value=\"singleUserPayload.customerEmail.toLowerCase()\" class=\"mr-2\" required></b-form-input>\n                </b-form-group>\n              </div>\n            </div>\n            <b-form-group label=\"User Role\">\n              <base-input>\n                <el-select class=\"select-danger\" filterable placeholder=\"Select user role\" required  v-model=\"singleUserPayload.customerOrganisationRole\">\n                  <el-option v-if=\"readOrganisationRoles.length > 1\" v-for=\"(item, index) in readOrganisationRoles\" :key=\"index\" :value=\"item.roleName\" :label=\"item.roleName\" class=\"select-danger\"></el-option>\n                </el-select>\n              </base-input>\n            </b-form-group>\n            <b-button class=\"w-100 text-white\" :disabled=\"loading\" :style=\"{backgroundColor:primaryColor}\" type=\"submit\">{{loading ? \"Saving\" : \"Save\" }}\n              <span :class=\"{ 'spinner-border': loading }\"></span>\n            </b-button>\n          </b-form>\n        </div>\n      </div>\n    </div>\n\n  </modal-1>\n\n</template>\n\n<script>\nimport OrganisationRequest from \"../../model/request/OrganisationRequest\";\nimport {mapState} from \"vuex\"\nimport StoreUtils from \"../../util/baseUtils/StoreUtils\";\nimport swal from \"sweetalert2\";\nexport default {\n  name: \"EditOrganisationUser\",\n  props: {\n    showOrganisationUserForm: Boolean,\n  },\n  data() {\n    return {\n      model: OrganisationRequest.updateOrganisationUser,\n      organisationRoles: [],\n      showModal: true,\n      primaryColor: window.__env.app.primaryColor\n\n    };\n  },\n\n  methods:{\n    updateUser(){\n      this.model.customerId = this.singleUserPayload.customerId\n      this.model.customerStatus = this.singleUserPayload.customerOrganisationStatus\n      this.model.customerRole = this.singleUserPayload.customerOrganisationRole\n      StoreUtils.dispatch(StoreUtils.actions.auth.updateUser, this.model)\n    },\n\n    closeModal() {\n      //close modal form\n      this.showModal = false;\n      this.$emit(\"closeUserForm\", false);\n      this.showModal = true;\n      //   StoreUtils.commit(StoreUtils.mutations.accountPayout.updateStatus, 'false')\n      StoreUtils.dispatch(StoreUtils.actions.auth.readCustomerByOrganisation)\n    },\n  },\n\n  computed:{\n    ...mapState({\n      singleUserPayload:state => state.auth.singleOrganisationUser,\n      readOrganisationRoles: (state) => state.auth.organisationRoles,\n      loading: state => state.auth.loading\n\n    })\n  }\n}\n</script>\n\n<style scoped>\n.card-head{\n  background-color: #D7E6F3;\n  color: white;\n}\n</style>"]}]}