{"remainingRequest":"/Users/clark/Desktop/business.corestep.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/clark/Desktop/business.corestep.com/src/components/UploadImageModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/clark/Desktop/business.corestep.com/src/components/UploadImageModal.vue","mtime":1683674085667},{"path":"/Users/clark/Desktop/business.corestep.com/node_modules/cache-loader/dist/cjs.js","mtime":1670880017776},{"path":"/Users/clark/Desktop/business.corestep.com/node_modules/babel-loader/lib/index.js","mtime":1670880017786},{"path":"/Users/clark/Desktop/business.corestep.com/node_modules/cache-loader/dist/cjs.js","mtime":1670880017776},{"path":"/Users/clark/Desktop/business.corestep.com/node_modules/vue-loader/lib/index.js","mtime":1670880044043}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICBpbXBvcnQge21hcFN0YXRlfSBmcm9tICd2dWV4JwogICAgaW1wb3J0IFN0b3JlVXRpbHMgZnJvbSAiQC91dGlsL2Jhc2VVdGlscy9TdG9yZVV0aWxzIjsKCgogICAgZXhwb3J0IGRlZmF1bHQgewogICAgICAgIG5hbWU6ICdMb2FuJywKICAgICAgICBwcm9wczpbJ3VwbG9hZFR5cGUnLCdyZWFkVHlwZScsJ2lzTG9hZGluZycsJ3VwbG9hZERhdGEnLCdyZWFkRGF0YScsJ2ZpbGVOYW1lJywnZGlyZWN0b3JUeXBlJywnc2hvdyddLAogICAgICAgIGRhdGEoKSB7CiAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICBwcmltYXJ5Q29sb3I6d2luZG93Ll9fZW52LmFwcC5wcmltYXJ5Q29sb3IsCiAgICAgICAgICAgICAgICBtb2RlbDp7CiAgICAgICAgICAgICAgICAgICAgYmFzZTY0OiAnJywKICAgICAgICAgICAgICAgICAgICB1c2VybmFtZTogJycsCiAgICAgICAgICAgICAgICAgICAgcmVnaW9uOiAndXMtZWFzdC0xJywKICAgICAgICAgICAgICAgICAgICBzb3VyY2U6ICJxdWlja2dlbSIsCiAgICAgICAgICAgICAgICAgICAgczNidWNrZXQ6ICdxdWlrZ2VtLXJlcG8nCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgZmlsZTogewogICAgICAgICAgICAgICAgICAgIGFjY291bnRudW1iZXI6ICcnLAogICAgICAgICAgICAgICAgICAgIGZpbGU6ICcnLAogICAgICAgICAgICAgICAgICAgIGFtb3VudDogJycsCiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICBiYW5rOiB7fSwKICAgICAgICAgICAgICAgICAgICBuYXJyYXRpb246ICcnLAogICAgICAgICAgICAgICAgICAgIHVwbG9hZGVkRmlsZXM6IFtdLAogICAgICAgICAgICAgICAgICAgIHVwbG9hZEVycm9yOiBudWxsLAogICAgICAgICAgICAgICAgICAgIGN1cnJlbnRTdGF0dXM6IG51bGwsCiAgICAgICAgICAgICAgICAgICAgdXBsb2FkRmllbGROYW1lOiAncGhvdG9zJywKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGNvbXBvbmVudHM6IHt9LAogICAgICAgIGNvbXB1dGVkOiB7CiAgICAgICAgICAgIGdyYWRlcygpewogICAgICAgICAgICAgICAgcmV0dXJuICB0aGlzLmdyYWRlLmdyYWRlcwogICAgICAgICAgICB9LAogICAgICAgICAgICBhdXRob2JqOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuYXV0aC5yZXNwb25zZQogICAgICAgICAgICB9LAogICAgICAgICAgICAuLi5tYXBTdGF0ZShbCiAgICAgICAgICAgICAgICAnZ3JhZGUnLAogICAgICAgICAgICAgICAgJ2F1dGgnCiAgICAgICAgICAgIF0pLAogICAgICAgICAgLi4ubWFwU3RhdGUoewoKICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgICAgICBtZXRob2RzOiB7CiAgICAgICAgICAgdXBsb2FkRmlsZShldmVudCkgewogICAgICAgICAgICAgICB0aGlzLmhhbmRsZVVwbG9hZChldmVudCkKICAgICAgICAgICAgfSwKCiAgICAgICAgICAgIGFzeW5jIGhhbmRsZVVwbG9hZChldmVudCkgewogICAgICAgICAgICAgICAgY29uc3QgZmlsZSA9IGV2ZW50LnRhcmdldC5maWxlc1swXTsKICAgICAgICAgICAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgICAgIHJlYWRlci5vbmxvYWQgPSBhc3luYyBlID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5tb2RlbC5iYXNlNjQgPSBlLnRhcmdldC5yZXN1bHQKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5tb2RlbC5kaXJlY3RvclR5cGUgPSB0aGlzLmRpcmVjdG9yVHlwZQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1vZGVsLnVzZXJuYW1lID0gdGhpcy5maWxlTmFtZSsiLSIrU3RvcmVVdGlscy5yb290R2V0dGVycyhTdG9yZVV0aWxzLmdldHRlcnMuYXV0aC5nZXRDdXJyZW50T3JnYW5pemF0aW9uKS5vcmdhbmlzYXRpb25OYW1lLnJlcGxhY2UoIiAiLCItIikudG9Mb3dlckNhc2UoKQogICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCh0aGlzLnVwbG9hZFR5cGUsIHRoaXMubW9kZWwpOwogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmhpZGUoKTsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2FkRGF0YSgpOwogICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpOwogICAgICAgICAgICAgICAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgZmlsZSk7CiAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKGUubWVzc2FnZSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKCiAgICAgICAgICAgIGxvYWREYXRhKCl7CiAgICAgICAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh0aGlzLnJlYWRUeXBlLCB0aGlzLnJlYWREYXRhLCB7cm9vdDogZmFsc2V9KS50aGVuKCkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgaGlkZSgpIHsKICAgICAgICAgICAgICAgIHRoaXMuJHJlZnNbJ2ltYWdlLXVwbG9hZC1tb2RhbCddLmhpZGUoKQogICAgICAgICAgICB9LAogICAgICAgICAgICBvblNlbGVjdCh7bmFtZSwgaXNvMiwgZGlhbENvZGV9KSB7CiAgICAgICAgICAgICAgICB0aGlzLm1vZGVsLmVtcGxveWVlQ291bnRyeUNvZGUgPSAgZGlhbENvZGUKICAgICAgICAgICAgfSwKICAgICAgICAgICAgbnVtYmVyV2l0aENvbW1hcyh4KSB7CiAgICAgICAgICAgICAgICBsZXQgcGFydHMgPSB4LnRvU3RyaW5nKCkuc3BsaXQoIi4iKTsKICAgICAgICAgICAgICAgIGlmIChwYXJ0c1sxXSA9PSBudWxsKSAgcGFydHNbMV0gPSAnMDAnCiAgICAgICAgICAgICAgICBlbHNlIGlmIChwYXJ0c1sxXS5sZW5ndGggPT09IDApIHBhcnRzWzFdID0gcGFydHNbMV0rJzAwJwogICAgICAgICAgICAgICAgZWxzZSBpZiAocGFydHNbMV0ubGVuZ3RoID09PSAxKSBwYXJ0c1sxXSA9IHBhcnRzWzFdKycwJwogICAgICAgICAgICAgICAgcGFydHNbMF0gPSBwYXJ0c1swXS5yZXBsYWNlKC9cQig/PShcZHszfSkrKD8hXGQpKS9nLCAiLCIpOwogICAgICAgICAgICAgICAgcmV0dXJuIHBhcnRzLmpvaW4oIi4iKTsKICAgICAgICAgICAgfSwKICAgICAgICB9LAoKICAgICAgICB3YXRjaDogewogICAgICAgICAgICBzaG93OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICBsZXQgc2VsZiA9IHRoaXM7CiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnMKICAgICAgICAgICAgICAgIE9iamVjdC5rZXlzKHRoaXMudXBsb2FkRGF0YSkuZm9yRWFjaChmdW5jdGlvbihrZXksaW5kZXgpIHsKICAgICAgICAgICAgICAgICAgICBzZWxmLm1vZGVsW2tleV0gPSBzZWxmLnVwbG9hZERhdGFba2V5XTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgdGhpcy4kcmVmc1snaW1hZ2UtdXBsb2FkLW1vZGFsJ10uc2hvdygpCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICBtb3VudGVkKCkgewogICAgICAgICAgLy9jb25zb2xlLmNsZWFyKCkKICAgICAgfQogICAgfQoKCg=="},{"version":3,"sources":["UploadImageModal.vue"],"names":[],"mappings":";AAiCA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UploadImageModal.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <b-modal id=\"image-upload-modal\" :hide-backdrop=\"true\" :hide-header=\"true\" :hide-footer=\"true\" :centered=\"true\" ref=\"image-upload-modal\">\n        <div class=\"modal-body\">\n            <a href=\"#\" role=\"button\" class=\"close pos-absolute t-15 r-15\" data-dismiss=\"modal\" aria-label=\"Close\"\n               @click=\"hide()\">\n                <span aria-hidden=\"true\">&times;</span>\n            </a>\n            <div>\n                <h4>Upload Your ID</h4>\n<!--                <p class=\"tx-color-03\">Upload file for processing</p>-->\n                <b-form @submit.prevent=\"\" enctype=\"multipart/form-data\">\n                    <b-form-group>\n                        <div class=\"dropbox\" :style=\"{backgroundColor:primaryColor, color:'white'}\">\n                            <input multiple type=\"file\" class=\"input-file\" id=\"files\" accept=\"image/*\" :name=\"file.uploadFieldName\"\n                                   :disabled=\"isLoading\"\n                                   @change=\"uploadFile\" ref=\"file\">\n                            <p v-if=\"!isLoading\">\n                                Drag your file(s) here to begin<br> or click to browse\n                            </p>\n                          <div v-if=\"isLoading\" style=\"height:30vh;display: flex;align-items: center;justify-content: center;flex-direction: column\">\n                            <span>Uploading files...</span>\n                            <span class=\"spinner-border spinner-border-sm\"></span>\n                          </div>\n\n                        </div>\n                    </b-form-group>\n                </b-form>\n            </div>\n        </div><!-- modal-body -->\n    </b-modal>\n</template>\n\n<script>\n    import {mapState} from 'vuex'\n    import StoreUtils from \"@/util/baseUtils/StoreUtils\";\n\n\n    export default {\n        name: 'Loan',\n        props:['uploadType','readType','isLoading','uploadData','readData','fileName','directorType','show'],\n        data() {\n            return {\n                primaryColor:window.__env.app.primaryColor,\n                model:{\n                    base64: '',\n                    username: '',\n                    region: 'us-east-1',\n                    source: \"quickgem\",\n                    s3bucket: 'quikgem-repo'\n                },\n                file: {\n                    accountnumber: '',\n                    file: '',\n                    amount: '',\n                    status: false,\n                    bank: {},\n                    narration: '',\n                    uploadedFiles: [],\n                    uploadError: null,\n                    currentStatus: null,\n                    uploadFieldName: 'photos',\n                },\n            }\n        },\n        components: {},\n        computed: {\n            grades(){\n                return  this.grade.grades\n            },\n            authobj: function () {\n                return this.$store.state.auth.response\n            },\n            ...mapState([\n                'grade',\n                'auth'\n            ]),\n          ...mapState({\n\n          })\n        },\n        methods: {\n           uploadFile(event) {\n               this.handleUpload(event)\n            },\n\n            async handleUpload(event) {\n                const file = event.target.files[0];\n                const reader = new FileReader();\n                try {\n                    reader.onload = async e => {\n                        this.model.base64 = e.target.result\n                        this.model.directorType = this.directorType\n                        this.model.username = this.fileName+\"-\"+StoreUtils.rootGetters(StoreUtils.getters.auth.getCurrentOrganization).organisationName.replace(\" \",\"-\").toLowerCase()\n                        await this.$store.dispatch(this.uploadType, this.model);\n                        this.hide();\n                        this.loadData();\n                    };\n                  reader.readAsDataURL(file);\n                    this.$emit('input', file);\n                } catch (e) {\n                    console.warn(e.message)\n                }\n            },\n\n            loadData(){\n                this.$store.dispatch(this.readType, this.readData, {root: false}).then()\n            },\n            hide() {\n                this.$refs['image-upload-modal'].hide()\n            },\n            onSelect({name, iso2, dialCode}) {\n                this.model.employeeCountryCode =  dialCode\n            },\n            numberWithCommas(x) {\n                let parts = x.toString().split(\".\");\n                if (parts[1] == null)  parts[1] = '00'\n                else if (parts[1].length === 0) parts[1] = parts[1]+'00'\n                else if (parts[1].length === 1) parts[1] = parts[1]+'0'\n                parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n                return parts.join(\".\");\n            },\n        },\n\n        watch: {\n            show: function () {\n                let self = this;\n                // eslint-disable-next-line no-unused-vars\n                Object.keys(this.uploadData).forEach(function(key,index) {\n                    self.model[key] = self.uploadData[key];\n                });\n                this.$refs['image-upload-modal'].show()\n            }\n        },\n      mounted() {\n          //console.clear()\n      }\n    }\n\n\n</script>\n\n<style scoped>\n    .dropbox {\n        /*outline: 2px dashed grey; !* the dash box *!*/\n        /*outline-offset: -10px;*/\n        color: dimgray;\n        padding: 10px 10px;\n        min-height: 200px; /* minimum height */\n        position: relative;\n        cursor: pointer;\n    }\n\n    .input-file {\n        opacity: 0; /* invisible but it's there! */\n        width: 100%;\n        height: 100%;\n        position: absolute;\n        cursor: pointer;\n    }\n\n    .dropbox:hover {\n        background: lightblue; /* when mouse over to the drop zone, change color */\n    }\n\n    .dropbox p {\n        font-size: 1.2em;\n        text-align: center;\n        padding: 50px 0;\n    }\n    .spinner-border {\n      display: inline-block;\n      width: 1rem;\n      height: 1rem;\n      vertical-align: text-bottom;\n      border: 0.25em solid currentColor;\n      border-right-color: transparent;\n      border-radius: 50%;\n      -webkit-animation: spinner-border 0.75s linear infinite;\n      animation: spinner-border 0.75s linear infinite;\n    }\n\n\n    @keyframes spinner-border {\n      to {\n        transform: rotate(360deg);\n      }\n    }\n\n</style>\n"]}]}