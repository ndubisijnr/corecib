{"remainingRequest":"/Users/clark/Desktop/business.corestep.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/clark/Desktop/business.corestep.com/src/components/worldMap/WorldMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/clark/Desktop/business.corestep.com/src/components/worldMap/WorldMap.vue","mtime":1683674085756},{"path":"/Users/clark/Desktop/business.corestep.com/node_modules/cache-loader/dist/cjs.js","mtime":1670880017776},{"path":"/Users/clark/Desktop/business.corestep.com/node_modules/babel-loader/lib/index.js","mtime":1670880017786},{"path":"/Users/clark/Desktop/business.corestep.com/node_modules/cache-loader/dist/cjs.js","mtime":1670880017776},{"path":"/Users/clark/Desktop/business.corestep.com/node_modules/vue-loader/lib/index.js","mtime":1670880044043}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCAnZDMnOwppbXBvcnQgKiBhcyBkMyBmcm9tICdkMyc7CmltcG9ydCAndG9wb2pzb24nOwppbXBvcnQgeyB0aHJvdHRsZSB9IGZyb20gJ0AvdXRpbC90aHJvdHRsZSc7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ3dvcmxkLW1hcCcsCiAgcHJvcHM6IHsKICAgIG1hcERhdGE6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICBkZWZhdWx0OiAoKSA9PiAoe30pCiAgICB9LAogICAgcG9pbnRzOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiAoKSA9PiBbXQogICAgfQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlkOiB0aGlzLnJhbmRvbVN0cmluZygpLAogICAgICBjb2xvcjE6ICcjZjZmOWZjJywKICAgICAgY29sb3IyOiAnI2FkYjViZCcsCiAgICAgIGhpZ2hsaWdodEZpbGxDb2xvcjogJyNjZWQ0ZGEnLAogICAgICBib3JkZXJDb2xvcjogJ3doaXRlJywKICAgICAgaGlnaGxpZ2h0Qm9yZGVyQ29sb3I6ICd3aGl0ZScsCiAgICAgIGJ1YmJsZUhpZ2hsaWdodEZpbGxDb2xvcjogJyMxMWNkZWYnLAogICAgICBidWJibGVGaWxsQ29sb3I6ICcjZmI2MzQwJwogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdlbmVyYXRlQ29sb3JzKGxlbmd0aCkgewogICAgICByZXR1cm4gZDMKICAgICAgICAuc2NhbGVMaW5lYXIoKQogICAgICAgIC5kb21haW4oWzAsIGxlbmd0aF0pCiAgICAgICAgLnJhbmdlKFt0aGlzLmNvbG9yMSwgdGhpcy5jb2xvcjJdKTsKICAgIH0sCiAgICBnZW5lcmF0ZU1hcENvbG9ycygpIHsKICAgICAgbGV0IG1hcERhdGFWYWx1ZXMgPSBPYmplY3QudmFsdWVzKHRoaXMubWFwRGF0YSk7CiAgICAgIGxldCBtYXhWYWwgPSBNYXRoLm1heCguLi5tYXBEYXRhVmFsdWVzKTsKICAgICAgbGV0IGNvbG9ycyA9IHRoaXMuZ2VuZXJhdGVDb2xvcnMobWF4VmFsKTsKICAgICAgbGV0IG1hcERhdGEgPSB7fTsKICAgICAgbGV0IGZpbGxzID0gewogICAgICAgIGRlZmF1bHRGaWxsOiAnI0VERjBGMicKICAgICAgfTsKICAgICAgZm9yIChsZXQga2V5IGluIHRoaXMubWFwRGF0YSkgewogICAgICAgIGxldCB2YWwgPSB0aGlzLm1hcERhdGFba2V5XTsKICAgICAgICBmaWxsc1trZXldID0gY29sb3JzKHZhbCk7CiAgICAgICAgbWFwRGF0YVtrZXldID0gewogICAgICAgICAgZmlsbEtleToga2V5LAogICAgICAgICAgdmFsdWU6IHZhbAogICAgICAgIH07CiAgICAgIH0KICAgICAgcmV0dXJuIHsKICAgICAgICBtYXBEYXRhLAogICAgICAgIGZpbGxzCiAgICAgIH07CiAgICB9LAogICAgYXN5bmMgaW5pdFZlY3Rvck1hcCgpIHsKICAgICAgbGV0IERhdGFNYXAgPSBhd2FpdCBpbXBvcnQoJ2RhdGFtYXBzJyk7CiAgICAgIERhdGFNYXAgPSBEYXRhTWFwLmRlZmF1bHQgfHwgRGF0YU1hcAogICAgICBsZXQgeyBmaWxscywgbWFwRGF0YSB9ID0gdGhpcy5nZW5lcmF0ZU1hcENvbG9ycygpOwogICAgICBsZXQgd29ybGRNYXAgPSBuZXcgRGF0YU1hcCh7CiAgICAgICAgc2NvcGU6ICd3b3JsZCcsCiAgICAgICAgZWxlbWVudDogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5pZCksCiAgICAgICAgZmlsbHMsCiAgICAgICAgZGF0YTogbWFwRGF0YSwKICAgICAgICByZXNwb25zaXZlOiB0cnVlLAogICAgICAgIGdlb2dyYXBoeUNvbmZpZzogewogICAgICAgICAgYm9yZGVyQ29sb3I6IHRoaXMuYm9yZGVyQ29sb3IsCiAgICAgICAgICBib3JkZXJXaWR0aDogMSwKICAgICAgICAgIGJvcmRlck9wYWNpdHk6IDEsCiAgICAgICAgICBoaWdobGlnaHRGaWxsQ29sb3I6IHRoaXMuaGlnaGxpZ2h0RmlsbENvbG9yLAogICAgICAgICAgaGlnaGxpZ2h0Qm9yZGVyQ29sb3I6IHRoaXMuaGlnaGxpZ2h0Qm9yZGVyQ29sb3IsCiAgICAgICAgICBoaWdobGlnaHRCb3JkZXJXaWR0aDogMSwKICAgICAgICAgIGhpZ2hsaWdodEJvcmRlck9wYWNpdHk6IDEKICAgICAgICB9CiAgICAgIH0pOwogICAgICBsZXQgYnViYmxlT3B0aW9ucyA9IHsKICAgICAgICByYWRpdXM6IDIsCiAgICAgICAgYm9yZGVyV2lkdGg6IDQsCiAgICAgICAgaGlnaGxpZ2h0Qm9yZGVyV2lkdGg6IDQsCiAgICAgICAgZmlsbEtleTogdGhpcy5idWJibGVGaWxsQ29sb3IsCiAgICAgICAgZmlsbENvbG9yOiB0aGlzLmJ1YmJsZUZpbGxDb2xvciwKICAgICAgICBib3JkZXJDb2xvcjogdGhpcy5idWJibGVGaWxsQ29sb3IsCiAgICAgICAgaGlnaGxpZ2h0RmlsbENvbG9yOiB0aGlzLmJ1YmJsZUhpZ2hsaWdodEZpbGxDb2xvciwKICAgICAgICBoaWdobGlnaHRCb3JkZXJDb2xvcjogdGhpcy5idWJibGVIaWdobGlnaHRGaWxsQ29sb3IKICAgICAgfQogICAgICBsZXQgYnViYmxlUG9pbnRzID0gdGhpcy5wb2ludHMubWFwKHBvaW50ID0+IHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgLi4uYnViYmxlT3B0aW9ucywKICAgICAgICAgIC4uLnBvaW50CiAgICAgICAgfQogICAgICB9KQogICAgICB3b3JsZE1hcC5idWJibGVzKGJ1YmJsZVBvaW50cywgewogICAgICAgIHBvcHVwVGVtcGxhdGU6IGZ1bmN0aW9uKGdlbywgZGF0YSkgewogICAgICAgICAgcmV0dXJuICc8ZGl2IGNsYXNzPSJob3ZlcmluZm8iPicgKyBkYXRhLm5hbWUKICAgICAgICB9CiAgICAgIH0pOwogICAgICBsZXQgcmVzaXplRnVuYyA9IHdvcmxkTWFwLnJlc2l6ZS5iaW5kKHdvcmxkTWFwKTsKICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoCiAgICAgICAgJ3Jlc2l6ZScsCiAgICAgICAgKCkgPT4gewogICAgICAgICAgdGhyb3R0bGUocmVzaXplRnVuYywgNDApOwogICAgICAgIH0sCiAgICAgICAgZmFsc2UKICAgICAgKTsKICAgIH0sCiAgICByYW5kb21TdHJpbmcoKSB7CiAgICAgIGxldCB0ZXh0ID0gIiI7CiAgICAgIGxldCBwb3NzaWJsZSA9ICJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6IjsKCiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgNTsgaSsrKQogICAgICAgIHRleHQgKz0gcG9zc2libGUuY2hhckF0KE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHBvc3NpYmxlLmxlbmd0aCkpOwoKICAgICAgcmV0dXJuIHRleHQ7CiAgICB9CiAgfSwKICBhc3luYyBtb3VudGVkKCkgewogICAgdGhpcy5pbml0VmVjdG9yTWFwKCk7CiAgfQp9Owo="},{"version":3,"sources":["WorldMap.vue"],"names":[],"mappingsfile":"WorldMap.vue","sourceRoot":"src/components/worldMap","sourcesContent":["<template>\n  <div :id=\"id\" class=\"world-map\"></div>\n</template>\n<script>\nimport 'd3';\nimport * as d3 from 'd3';\nimport 'topojson';\nimport { throttle } from '@/util/throttle';\n\nexport default {\n  name: 'world-map',\n  props: {\n    mapData: {\n      type: Object,\n      default: () => ({})\n    },\n    points: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      id: this.randomString(),\n      color1: '#f6f9fc',\n      color2: '#adb5bd',\n      highlightFillColor: '#ced4da',\n      borderColor: 'white',\n      highlightBorderColor: 'white',\n      bubbleHighlightFillColor: '#11cdef',\n      bubbleFillColor: '#fb6340'\n    };\n  },\n  methods: {\n    generateColors(length) {\n      return d3\n        .scaleLinear()\n        .domain([0, length])\n        .range([this.color1, this.color2]);\n    },\n    generateMapColors() {\n      let mapDataValues = Object.values(this.mapData);\n      let maxVal = Math.max(...mapDataValues);\n      let colors = this.generateColors(maxVal);\n      let mapData = {};\n      let fills = {\n        defaultFill: '#EDF0F2'\n      };\n      for (let key in this.mapData) {\n        let val = this.mapData[key];\n        fills[key] = colors(val);\n        mapData[key] = {\n          fillKey: key,\n          value: val\n        };\n      }\n      return {\n        mapData,\n        fills\n      };\n    },\n    async initVectorMap() {\n      let DataMap = await import('datamaps');\n      DataMap = DataMap.default || DataMap\n      let { fills, mapData } = this.generateMapColors();\n      let worldMap = new DataMap({\n        scope: 'world',\n        element: document.getElementById(this.id),\n        fills,\n        data: mapData,\n        responsive: true,\n        geographyConfig: {\n          borderColor: this.borderColor,\n          borderWidth: 1,\n          borderOpacity: 1,\n          highlightFillColor: this.highlightFillColor,\n          highlightBorderColor: this.highlightBorderColor,\n          highlightBorderWidth: 1,\n          highlightBorderOpacity: 1\n        }\n      });\n      let bubbleOptions = {\n        radius: 2,\n        borderWidth: 4,\n        highlightBorderWidth: 4,\n        fillKey: this.bubbleFillColor,\n        fillColor: this.bubbleFillColor,\n        borderColor: this.bubbleFillColor,\n        highlightFillColor: this.bubbleHighlightFillColor,\n        highlightBorderColor: this.bubbleHighlightFillColor\n      }\n      let bubblePoints = this.points.map(point => {\n        return {\n          ...bubbleOptions,\n          ...point\n        }\n      })\n      worldMap.bubbles(bubblePoints, {\n        popupTemplate: function(geo, data) {\n          return '<div class=\"hoverinfo\">' + data.name\n        }\n      });\n      let resizeFunc = worldMap.resize.bind(worldMap);\n      window.addEventListener(\n        'resize',\n        () => {\n          throttle(resizeFunc, 40);\n        },\n        false\n      );\n    },\n    randomString() {\n      let text = \"\";\n      let possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\n      for (let i = 0; i < 5; i++)\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n      return text;\n    }\n  },\n  async mounted() {\n    this.initVectorMap();\n  }\n};\n</script>\n<style></style>\n"]}]}