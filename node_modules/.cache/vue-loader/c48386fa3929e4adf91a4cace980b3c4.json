{"remainingRequest":"/Users/clark/Desktop/business.corestep.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/clark/Desktop/business.corestep.com/src/components/form/ApiKeyDisplayForm.vue?vue&type=style&index=0&id=6170c7e6&lang=css&","dependencies":[{"path":"/Users/clark/Desktop/business.corestep.com/src/components/form/ApiKeyDisplayForm.vue","mtime":1683674085712},{"path":"/Users/clark/Desktop/business.corestep.com/node_modules/css-loader/dist/cjs.js","mtime":1670880042824},{"path":"/Users/clark/Desktop/business.corestep.com/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1670880044043},{"path":"/Users/clark/Desktop/business.corestep.com/node_modules/postcss-loader/src/index.js","mtime":1670880043297},{"path":"/Users/clark/Desktop/business.corestep.com/node_modules/cache-loader/dist/cjs.js","mtime":1670880017776},{"path":"/Users/clark/Desktop/business.corestep.com/node_modules/vue-loader/lib/index.js","mtime":1670880044043}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5zcGFuLWxvYWRlciB7CiAgd2lkdGg6IDIwcHggIWltcG9ydGFudDsKICBoZWlnaHQ6IDIwcHggIWltcG9ydGFudDsKfQoKLmJ0bi1sb2dpbiB7CiAgd2lkdGg6IDMzMnB4OwogIGhlaWdodDogNDNweDsKICBsZWZ0OiA1MXB4OwogIHRvcDogNjAxcHg7CgogIGJhY2tncm91bmQ6IHZhcigtLXByaW1hcnkpOwogIGJvcmRlci1yYWRpdXM6IDVweDsKICBib3JkZXI6IG5vbmU7CiAgY29sb3I6IHdoaXRlOwp9Cgouc3Bpbm5lci1ib3JkZXIgewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICB3aWR0aDogMXJlbTsKICBoZWlnaHQ6IDFyZW07CiAgdmVydGljYWwtYWxpZ246IHRleHQtYm90dG9tOwogIGJvcmRlcjogMC4yNWVtIHNvbGlkIGN1cnJlbnRDb2xvcjsKICBib3JkZXItcmlnaHQtY29sb3I6IHRyYW5zcGFyZW50OwogIGJvcmRlci1yYWRpdXM6IDUwJTsKICAtd2Via2l0LWFuaW1hdGlvbjogc3Bpbm5lci1ib3JkZXIgMC43NXMgbGluZWFyIGluZmluaXRlOwogIGFuaW1hdGlvbjogc3Bpbm5lci1ib3JkZXIgMC43NXMgbGluZWFyIGluZmluaXRlOwp9CgpAa2V5ZnJhbWVzIHNwaW5uZXItYm9yZGVyIHsKICB0byB7CiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOwogIH0KfQo="},{"version":3,"sources":["ApiKeyDisplayForm.vue"],"names":[],"mappings":";AAwMA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"ApiKeyDisplayForm.vue","sourceRoot":"src/components/form","sourcesContent":["<template>\n  <div>\n    <validation-observer v-slot=\"{ handleSubmit }\" ref=\"formValidator\">\n      <div class=\"\">\n        <form class=\"container form-group form-login\" role=\"form\" @submit.prevent=\"handleSubmit(saveChanges)\">\n<!--          <span :class=\"{ 'spinner-border': loading }\"></span>-->\n          <div>\n            <label class=\"form-label mt-2 pr-4\">{{ testLive }} Secret Key </label>\n            <div class=\"form-floating\">\n              <input type=\"password\" class=\"form-control\" :value=\"api[`apikey${testLive}SK`]\" id=\"content\" disabled=\"true\" style=\"cursor:pointer\" />\n              <i class=\"fas fa-copy\" style=\"position: absolute; right: 20px; top: 8px; cursor: pointer;z-index:99999\" @click=\"copyToClipboard()\"></i>\n            </div>\n\n\n            <label class=\"form-label mt-2 pr-4\">{{ testLive }} Public Key </label>\n            <div class=\"form-floating\">\n              <input type=\"text\" class=\"form-control\" :value=\"api[`apikey${testLive}PK`]\" disabled=\"true\" id=\"content2\"\n                style=\"cursor:pointer\" />\n              <i class=\"fas fa-copy\" style=\"position: absolute; right: 20px; top: 8px; cursor: pointer;z-index:99999\"\n                 @click=\"copyToClipboard2()\"></i>\n            </div>\n\n            <div v-if=\"api.apikeyTestCallback == null && api.apikeyLiveCallback == null\">\n            <label class=\"form-label mt-2 pr-4\">{{ testLive }} Callback URL </label>\n            <div class=\"form-floating\">\n              <input type=\"text\" class=\"form-control\" v-model=\"callBackUrl\" required  />\n            </div>\n\n            <label class=\"form-label pr-4\">{{ testLive }} Authorization Header </label>\n            <div class=\"row mb-3\">\n              <div class=\"col-5\">\n                <div class=\"form-floating\">\n                  <input type=\"text\" class=\"form-control\" v-model=\"headerKey\" required />\n                  <label>Key</label>\n\n                </div>\n\n              </div>\n              <div class=\"col-7\">\n                <div class=\"form-floating\">\n                  <input type=\"text\" class=\"form-control\" v-model=\"headerValue\" required />\n                  <label>Value</label>\n                </div>\n              </div>\n\n            </div>\n              <div class=\"text-start\">\n                <base-button title=\"Save\" :loading=\"loading\"></base-button>\n              </div>\n            </div>\n            <div v-else>\n              <label class=\"form-label mt-2 pr-4\">{{ testLive }} Callback URL </label>\n              <div class=\"form-floating\">\n                <input type=\"text\" v-if=\"currentOrganisation.organisationStage === 'DEV'\" class=\"form-control\" v-model=\"api.apikeyTestCallback\"  :id=\"`${testLive}_callback`\" required/>\n                <input v-else type=\"text\" class=\"form-control\" v-model=\"api.apikeyLiveCallback\"  :id=\"`${testLive}_callback`\" required/>\n              </div>\n\n              <label class=\"form-label pr-4\">{{ testLive }} Authorization Header </label>\n              <div class=\"row mb-3\">\n                <div class=\"col-5\">\n                  <div class=\"form-floating\">\n                    <input type=\"text\" v-if=\"currentOrganisation.organisationStage === 'DEV'\" class=\"form-control\" v-model=\"api.apikeyTestHeaderKey\" :id=\"`${testLive}_headerKey`\"  required/>\n                    <input type=\"text\" v-else class=\"form-control\" v-model=\"api.apikeyLiveHeaderKey\" :id=\"`${testLive}_headerKey`\" required/>\n                    <label>Key</label>\n                  </div>\n                </div>\n                <div class=\"col-7\">\n                  <div class=\"form-floating\">\n                    <input v-if=\"currentOrganisation.organisationStage === 'DEV'\" type=\"text\" class=\"form-control\" v-model=\"api.apikeyTestHeaderValue\" :id=\"`${testLive}_headerValue`\" required/>\n                    <input v-else type=\"text\" class=\"form-control\" v-model=\"api.apikeyLiveHeaderValue\" :id=\"`${testLive}_headerValue`\" required/>\n                    <label>Value</label>\n                  </div>\n                </div>\n              </div>\n              <div class=\"text-start\">\n                <base-button title=\"Save\" :loading=\"loading\"></base-button>\n              </div>\n            </div>\n\n          </div>\n        </form>\n      </div>\n    </validation-observer>\n  </div>\n</template>\n<script>\nimport { mapState } from \"vuex\";\nimport ApikeyRequest from \"../../model/request/ApiKeyRequest\";\nimport StoreUtils from \"../../util/baseUtils/StoreUtils\";\nimport BaseButton from \"../../components/button/BaseButton\"\nimport Swal from \"sweetalert2\";\n\nconst Toast = Swal.mixin({\n  toast: true,\n  position: \"top-end\",\n  showConfirmButton: false,\n  timer: 3000,\n  timerProgressBar: true,\n  didOpen: (toast) => {\n    toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n    toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n  },\n});\nexport default {\n  name: \"Apikey-Form\",\n  components: {\n    BaseButton\n  },\n  data: () => {\n    return {\n      headerKey: \"\",\n      headerValue: \"\",\n      //webHook:\"\",\n      callBackUrl: \"\",\n      model: ApikeyRequest.updateWebHook,\n    };\n  },\n\n  methods: {\n    copyToClipboard() {\n      let copyLink = document.getElementById(\"content\").value;\n      navigator.clipboard.writeText(copyLink).then(() => {\n        Toast.fire({ text: \"Copied to clipboard\", icon: \"success\" }).then(() => {});\n      });\n    },\n    copyToClipboard2() {\n      let copyLink2 = document.getElementById(\"content2\").value;\n      navigator.clipboard.writeText(copyLink2).then(() => {\n        Toast.fire({ text:\"Copied to clipboard\", icon: \"success\" }).then(() => {});\n      });\n    },\n    saveChanges() {\n      if(this.api.apikeyTestCallback == null || this.api.apikeyLiveCallback == null) {\n        this.model[`apikey${this.testLive}HeaderKey`] = this.headerKey\n        this.model[`apikey${this.testLive}HeaderValue`] = this.headerValue\n        this.model[`apikey${this.testLive}Callback`] = this.callBackUrl\n        //this.model[`apikey${this.testLive}Webhook`] = this.webHook\n\n        console.log(this.model)\n\n        StoreUtils.dispatch(StoreUtils.actions.apiKey.updateWebhookCallback, this.model).then(() => {\n          this.model.apikeyOrganisationId = localStorage.organisationId;\n          this.model.apikeyId = localStorage.organisationId;\n          StoreUtils.dispatch(\n              StoreUtils.actions.apiKey.updateApikey,\n              this.model\n          );\n        })\n      }else{\n          let headerKey = document.getElementById(`${this.testLive}_headerKey`).value;\n          let headerValue = document.getElementById(`${this.testLive}_headerValue`).value;\n          let callback = document.getElementById(`${this.testLive}_callback`).value;\n\n          this.model[`apikey${this.testLive}HeaderKey`] = headerKey\n          this.model[`apikey${this.testLive}HeaderValue`] = headerValue\n          this.model[`apikey${this.testLive}Callback`] = callback\n\n\n          StoreUtils.dispatch(StoreUtils.actions.apiKey.updateWebhookCallback, this.model).then(() => {\n            this.model.apikeyOrganisationId = localStorage.organisationId;\n            this.model.apikeyId = localStorage.organisationId;\n            StoreUtils.dispatch(\n                StoreUtils.actions.apiKey.updateApikey,\n                this.model\n            );\n          })\n      }\n\n    }\n  },\n\n  mounted() {\n    this.model.apikeyOrganisationId = localStorage.organisationId;\n    this.model.apikeyId = localStorage.organisationId;\n    StoreUtils.dispatch(\n      StoreUtils.actions.apiKey.updateApikey,\n      this.model\n    );\n  },\n  computed: {\n    ...mapState({\n      api: (state) => state.apiKey.apiKey,\n      loading: (state) => state.apiKey.loading,\n    }),\n    stage() {\n      return StoreUtils.rootGetters(StoreUtils.getters.auth.getStage)\n    },\n    testLive() {\n      if (!this.stage) return \"Test\"\n      return this.stage.replace(\"PROD\", \"Live\").replace(\"DEV\", \"Test\");\n    },\n    currentOrganisation() {\n      return StoreUtils.rootGetters(\n        StoreUtils.getters.auth.getCurrentOrganization\n      );\n    },\n  },\n};\n</script>\n<style>\n.span-loader {\n  width: 20px !important;\n  height: 20px !important;\n}\n\n.btn-login {\n  width: 332px;\n  height: 43px;\n  left: 51px;\n  top: 601px;\n\n  background: var(--primary);\n  border-radius: 5px;\n  border: none;\n  color: white;\n}\n\n.spinner-border {\n  display: inline-block;\n  width: 1rem;\n  height: 1rem;\n  vertical-align: text-bottom;\n  border: 0.25em solid currentColor;\n  border-right-color: transparent;\n  border-radius: 50%;\n  -webkit-animation: spinner-border 0.75s linear infinite;\n  animation: spinner-border 0.75s linear infinite;\n}\n\n@keyframes spinner-border {\n  to {\n    transform: rotate(360deg);\n  }\n}\n</style>"]}]}