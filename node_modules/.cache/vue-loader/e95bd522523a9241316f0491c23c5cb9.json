{"remainingRequest":"/Users/clark/Desktop/business.corestep.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/clark/Desktop/business.corestep.com/src/components/form/AddNewBusiness.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/clark/Desktop/business.corestep.com/src/components/form/AddNewBusiness.vue","mtime":1683674085712},{"path":"/Users/clark/Desktop/business.corestep.com/node_modules/cache-loader/dist/cjs.js","mtime":1670880017776},{"path":"/Users/clark/Desktop/business.corestep.com/node_modules/babel-loader/lib/index.js","mtime":1670880017786},{"path":"/Users/clark/Desktop/business.corestep.com/node_modules/cache-loader/dist/cjs.js","mtime":1670880017776},{"path":"/Users/clark/Desktop/business.corestep.com/node_modules/vue-loader/lib/index.js","mtime":1670880044043}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBPcmdhbmlzYXRpb25SZXF1ZXN0IGZyb20gIi4uLy4uL21vZGVsL3JlcXVlc3QvT3JnYW5pc2F0aW9uUmVxdWVzdCI7CmltcG9ydCBjb3VudHJ5IGZyb20gIkAvY29tcG9uZW50cy9jb3VudHJ5IjsKaW1wb3J0IEJhc2VJbnB1dCBmcm9tICIuLi8uLi9jb21wb25lbnRzL2lucHV0cy9CYXNlSW5wdXQiOwppbXBvcnQgU3RvcmVVdGlscyBmcm9tICIuLi8uLi91dGlsL2Jhc2VVdGlscy9TdG9yZVV0aWxzIjsKaW1wb3J0IHttYXBTdGF0ZX0gZnJvbSAidnVleCI7CgoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJBZGROZXdCdXNpbmVzcyIsCiAgY29tcG9uZW50czogewogICAgQmFzZUlucHV0LAogIH0sCiAgZGF0YSgpewogICAgcmV0dXJuewogICAgICBzaG93TW9kYWw6IHRydWUsCiAgICAgIG9wdGlvbl9jb3VudHJ5OiBbXSwKICAgICAgY291bnRyeUN0cmw6IGZhbHNlLAogICAgICBuZXdCdXNpbmVzc01vZGFsOk9yZ2FuaXNhdGlvblJlcXVlc3QuYWRkT3JnYW5pc2F0aW9uLAogICAgICBwcmltYXJ5Q29sb3I6d2luZG93Ll9fZW52LmFwcC5wcmltYXJ5Q29sb3IsCiAgICAgIGVycm9yczp7CiAgICAgICAgYnVzaW5lc3NOYW1lOm51bGwsCiAgICAgIH0KCiAgICB9CiAgfSwKICBwcm9wczogewogICAgc2hvd0J1c2luZXNzRm9ybTogQm9vbGVhbiwKICB9LAoKICBtZXRob2RzOnsKICAgIGNsb3NlTW9kYWwoKSB7CiAgICAgIC8vY2xvc2UgbW9kYWwgZm9ybQogICAgICB0aGlzLnNob3dNb2RhbCA9IGZhbHNlOwogICAgICB0aGlzLiRlbWl0KCJjbG9zZUJ1c2luZXNzRm9ybSIsIGZhbHNlKTsKICAgICAgdGhpcy5zaG93TW9kYWwgPSB0cnVlOwogICAgICAvLyAgIFN0b3JlVXRpbHMuY29tbWl0KFN0b3JlVXRpbHMubXV0YXRpb25zLmFjY291bnRQYXlvdXQudXBkYXRlU3RhdHVzLCAnZmFsc2UnKQogICAgfSwKCiAgICB2YWxpZGF0aW9uKCl7CiAgICAgIGlmKCF0aGlzLm5ld0J1c2luZXNzTW9kYWwuY3VzdG9tZXJCdXNpbmVzc05hbWUuaW5jbHVkZXMoIiAiKSl7CiAgICAgICAgdGhpcy5lcnJvcnMuYnVzaW5lc3NOYW1lID0gJyJidXNpbmVzcyBuYW1lIHNob3VsZCBiZSBhdCBsZWFzdCB0d28gd29yZHMgc2VwYXJhdGVkIHdpdGggc3BhY2UiJwogICAgICB9ZWxzZXsKICAgICAgICB0aGlzLmVycm9ycy5idXNpbmVzc05hbWUgPSBudWxsCiAgICAgIH0KICAgIH0sCgogICAgYWRkQnVzaW5lc3MoKXsKICAgICAgdGhpcy5uZXdCdXNpbmVzc01vZGFsLmN1c3RvbWVySWQgPSBTdG9yZVV0aWxzLnJvb3RHZXR0ZXJzKFN0b3JlVXRpbHMuZ2V0dGVycy5hdXRoLmdldEN1c3RvbWVySWQpCiAgICAgIFN0b3JlVXRpbHMuZGlzcGF0Y2goU3RvcmVVdGlscy5hY3Rpb25zLmF1dGguYWRkT3JnYW5pc2F0aW9uLCB0aGlzLm5ld0J1c2luZXNzTW9kYWwpLnRoZW4oKCkgPT4gewogICAgICAgIHRoaXMucmVhZE9yZ2FuaXNhdGlvbi5jdXN0b21lcklkID0gU3RvcmVVdGlscy5yb290R2V0dGVycyhTdG9yZVV0aWxzLmdldHRlcnMuYXV0aC5nZXRDdXN0b21lcklkKQogICAgICAgIFN0b3JlVXRpbHMuZGlzcGF0Y2goU3RvcmVVdGlscy5hY3Rpb25zLmF1dGgucmVhZE9yZ2FuaXNhdGlvbkJ5VXNlcklkKQogICAgICAgIFN0b3JlVXRpbHMuZGlzcGF0Y2goU3RvcmVVdGlscy5hY3Rpb25zLmF1dGgucmVhZERhc2hib2FyZFN0YXRzKQogICAgICB9KQogICAgfSwKCiAgICBvblNlbGVjdCh7IGRpYWxDb2RlIH0pIHsKICAgICAgdGhpcy5uZXdCdXNpbmVzc01vZGFsLmN1c3RvbWVyQ291bnRyeUNvZGUgPSBkaWFsQ29kZTsKICAgIH0sCiAgfSwKCiAgY29tcHV0ZWQ6ewogICAgLi4ubWFwU3RhdGUoewogICAgICBsb2FkaW5nOnN0YXRlID0+IHN0YXRlLmF1dGgubG9hZGluZwogICAgfSksCgoKICB9LAoKICB3YXRjaDp7CgogIH0sCiAgbW91bnRlZCgpIHsKICAgIGxldCBjb3VudHJpZXMgPSBjb3VudHJ5OwogICAgdGhpcy5vcHRpb25fY291bnRyeSA9IGNvdW50cmllcy5tYXAoKGl0ZW0pID0+IHsKICAgICAgcmV0dXJuIHsKICAgICAgICB2YWx1ZTogYCR7aXRlbS5uYW1lfWAsCiAgICAgICAgbGFiZWw6IGAke2l0ZW0ubmFtZX1gLAogICAgICB9OwogICAgfSk7CiAgfQp9Cg=="},{"version":3,"sources":["AddNewBusiness.vue"],"names":[],"mappings":";AAoDA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AddNewBusiness.vue","sourceRoot":"src/components/form","sourcesContent":["<template>\n  <modal-1 :show=\"showBusinessForm && showModal\" body-classes=\"p-1\" modal-classes=\"modal-dialog-centered modal-md\">\n    <div>\n      <div class=\"modal-header\">\n        <h3>Add New Business ðŸ¤© </h3>\n        <button type=\"button\" class=\"btn-close p-2 m-2\" @click=\"closeModal()\"></button>\n      </div>\n      <div class=\"modal-body\">\n        <b-form class=\"\" @submit.prevent=\"addBusiness\">\n          <div class=\"row\">\n            <div class=\"col w-100 mb-2\">\n              <label class=\"small\">Business Name</label>\n              <input type=\"text\" @blur=\"validation\" v-model=\"newBusinessModal.customerBusinessName\" class=\"form-control\" placeholder=\"Business Name\"  required>\n              <span class=\"text-danger small\" v-if=\"errors.businessName\">{{errors.businessName}}</span>\n            </div>\n            <div class=\"col w-100 mb-2\">\n              <label class=\"small\">Business Email</label>\n              <input type=\"email\" v-model=\"newBusinessModal.customerEmail\" class=\"form-control\" placeholder=\"Business Email\" aria-label=\"Server\" required>\n            </div>\n          </div>\n          <div class=\"row mb-3\">\n            <div class=\"form-floating col\">\n              <base-input label=\"Country\">\n                <el-select class=\"select-danger w-100\" filterable placeholder=\"Country\" v-model=\"newBusinessModal.customerCountry\"\n                           required>\n                  <el-option v-for=\"option in option_country\" class=\"select-danger\" :value=\"option.value\"\n                             :label=\"option.label\" :key=\"option.value\">\n                  </el-option>\n                </el-select>\n                <p v-show=\"countryCtrl\" class=\"form-error-message\">\n                  The Country is required\n                </p>\n              </base-input>\n            </div>\n            <div class=\"col\">\n              <label class=\"small\">Phone Number</label>\n              <div class=\"d-flex\">\n                <vue-country-code v-model=\"newBusinessModal.customerCountryCode\" @onSelect=\"onSelect\" :preferredCountries=\"['ng', 'us', 'gb']\" style=\"height: 45px\" class=\"\" required></vue-country-code>\n                <input type=\"text\" v-model=\"newBusinessModal.customerPhone\" class=\"form-control\" placeholder=\"Phone Number\" aria-label=\"Server\" required>\n              </div>\n            </div>\n          </div>\n          <div>\n            <b-button type=\"submit\" :style=\"{backgroundColor:primaryColor,color: 'white',width: '100%'}\" :disabled=\"loading\"><span :class=\"{'spinner-border':loading}\"></span> {{loading ? 'Please Wait...' : 'Proceed'}}</b-button>\n          </div>\n        </b-form>\n      </div>\n    </div>\n  </modal-1>\n</template>\n\n<script>\nimport OrganisationRequest from \"../../model/request/OrganisationRequest\";\nimport country from \"@/components/country\";\nimport BaseInput from \"../../components/inputs/BaseInput\";\nimport StoreUtils from \"../../util/baseUtils/StoreUtils\";\nimport {mapState} from \"vuex\";\n\n\nexport default {\n  name: \"AddNewBusiness\",\n  components: {\n    BaseInput,\n  },\n  data(){\n    return{\n      showModal: true,\n      option_country: [],\n      countryCtrl: false,\n      newBusinessModal:OrganisationRequest.addOrganisation,\n      primaryColor:window.__env.app.primaryColor,\n      errors:{\n        businessName:null,\n      }\n\n    }\n  },\n  props: {\n    showBusinessForm: Boolean,\n  },\n\n  methods:{\n    closeModal() {\n      //close modal form\n      this.showModal = false;\n      this.$emit(\"closeBusinessForm\", false);\n      this.showModal = true;\n      //   StoreUtils.commit(StoreUtils.mutations.accountPayout.updateStatus, 'false')\n    },\n\n    validation(){\n      if(!this.newBusinessModal.customerBusinessName.includes(\" \")){\n        this.errors.businessName = '\"business name should be at least two words separated with space\"'\n      }else{\n        this.errors.businessName = null\n      }\n    },\n\n    addBusiness(){\n      this.newBusinessModal.customerId = StoreUtils.rootGetters(StoreUtils.getters.auth.getCustomerId)\n      StoreUtils.dispatch(StoreUtils.actions.auth.addOrganisation, this.newBusinessModal).then(() => {\n        this.readOrganisation.customerId = StoreUtils.rootGetters(StoreUtils.getters.auth.getCustomerId)\n        StoreUtils.dispatch(StoreUtils.actions.auth.readOrganisationByUserId)\n        StoreUtils.dispatch(StoreUtils.actions.auth.readDashboardStats)\n      })\n    },\n\n    onSelect({ dialCode }) {\n      this.newBusinessModal.customerCountryCode = dialCode;\n    },\n  },\n\n  computed:{\n    ...mapState({\n      loading:state => state.auth.loading\n    }),\n\n\n  },\n\n  watch:{\n\n  },\n  mounted() {\n    let countries = country;\n    this.option_country = countries.map((item) => {\n      return {\n        value: `${item.name}`,\n        label: `${item.name}`,\n      };\n    });\n  }\n}\n</script>\n\n<style scoped>\n.spinner-border {\n  display: inline-block;\n  width: 1rem;\n  height: 1rem;\n  vertical-align: text-bottom;\n  border: 0.25em solid currentColor;\n  border-right-color: transparent;\n  border-radius: 50%;\n  -webkit-animation: spinner-border 0.75s linear infinite;\n  animation: spinner-border 0.75s linear infinite;\n}\n\nlabel{\n  color: #000;\n}\n\n@keyframes spinner-border {\n  to {\n    transform: rotate(360deg);\n  }\n}\n</style>"]}]}