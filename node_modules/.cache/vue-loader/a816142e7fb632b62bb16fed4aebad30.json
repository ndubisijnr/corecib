{"remainingRequest":"/Users/clark/Desktop/business.corestep.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/clark/Desktop/business.corestep.com/src/views/settings/Settings.vue?vue&type=style&index=0&id=b57a72f6&lang=css&scoped=true&","dependencies":[{"path":"/Users/clark/Desktop/business.corestep.com/src/views/settings/Settings.vue","mtime":1706031409849},{"path":"/Users/clark/Desktop/business.corestep.com/node_modules/css-loader/dist/cjs.js","mtime":1670880042824},{"path":"/Users/clark/Desktop/business.corestep.com/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1670880044043},{"path":"/Users/clark/Desktop/business.corestep.com/node_modules/postcss-loader/src/index.js","mtime":1670880043297},{"path":"/Users/clark/Desktop/business.corestep.com/node_modules/cache-loader/dist/cjs.js","mtime":1670880017776},{"path":"/Users/clark/Desktop/business.corestep.com/node_modules/vue-loader/lib/index.js","mtime":1670880044043}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoucHJlZmVyZW5jZS1mb3JtewogIHdpZHRoOjcwJTsKICBhbGlnbi1pdGVtczpjZW50ZXI7CiAganVzdGlmeS1jb250ZW50OmNlbnRlcjsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgcGFkZGluZzoxJTsKICBtYXJnaW46IDElOwoKfQoKLyouY292ZXItb3ZlcmxheXsqLwovKiAgd2lkdGg6IGF1dG87Ki8KLyogIGhlaWdodDogMTAwdmg7Ki8KLyogIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyovCi8qICBwb3NpdGlvbjogYWJzb2x1dGU7Ki8KLyogIHotaW5kZXg6IDk5OTk5OTk5OTk7Ki8KLyogIGJvcmRlcjogc29saWQgcmVkOyovCi8qfSovCgoucHJlZmVyZW5jZS1pdGVtewogIHdpZHRoOjEwMCU7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKICBwYWRkaW5nOiAxJTsKICBib3gtc2hhZG93OiAwIDFweCAycHggaHNsKDBkZWcgMCUgMCUgLyAyMCUpOwoKICAvKmJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7Ki8KCn0KLnByZWZlcmVuY2UtYXJlYXsKICB3aWR0aDogMTAwJTsKICBkaXNwbGF5OiBmbGV4OwogIC8qbWFyZ2luOiA1JTsqLwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKfQoKLm9yZy1pbmZvewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogIGJveC1zaGFkb3c6IDAgMXB4IDJweCBoc2woMGRlZyAwJSAwJSAvIDIwJSk7CiAgcGFkZGluZzogMTBweDsKICB3aWR0aDogOTAlOwogIG1hcmdpbjoxMHB4IGF1dG87Cn0KCi5vcmctaW5mbyA+IGRpdiB7CiAgZm9udC1zaXplOiAxNnB4OwogIGZvbnQtZmFtaWx5OiAnc2Fucy1zZXJpZic7Cn0KCi5ib3gtY2FyZCA+IGg0ewogIGZvbnQtc2l6ZTogMTRweDsKICBmbG9hdDogbGVmdDsKICB3aWR0aDogMTAwJTsKICBwYWRkaW5nOiAxMHB4OwoKfQoKaDIgewogIHdpZHRoOiAxMDAlOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzAwMDsKICBsaW5lLWhlaWdodDogMC4xZW07CiAgbWFyZ2luOiAxMHB4IDAgMjBweDsKfQoKaDIgc3BhbiB7CiAgYmFja2dyb3VuZDojZmZmOwogIHBhZGRpbmc6MCAxMHB4Owp9Cgouc2V0dGluZ3Mtd3JhcCB7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTUsMjU1LDI1NSk7Cn0KCi8qLmJvZHkgeyovCi8qICBtaW4taGVpZ2h0OiA4MHZoKi8KLyp9Ki8KCi5za2VsZXRvbkxvYWRlcnt9CgouYW5pbWF0ZVNrZWxldG9uewogIHdpZHRoOjUwJTsKICBoZWlnaHQ6IDMwcHg7CiAgLypiYWNrZ3JvdW5kLWNvbG9yOiBncmF5OyovCiAgYmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQoOTBkZWcsIHJnYmEoNTUsIDI1NSwgMjU1LCAwLjAxKSAwLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTYpIDIwJSwgcmdiYSgyNDgsIDI0NywgMjQ3LCAwLjUpIDYwJSwgcmdiKDI1NSwgMjU1LCAyNTUpKTsKICBhbmltYXRpb246IGJsaW5rIDFzIGluZmluaXRlOwp9CgpAa2V5ZnJhbWVzIGJsaW5rIHsKICAxMDAlIHsKICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKTsKICB9Cn0KCkBtZWRpYSBzY3JlZW4gYW5kIChwcmVmZXJzLXJlZHVjZWQtbW90aW9uOiByZWR1Y2UpIHsKICAuYW5pbWF0ZVNrZWxldG9uOjphZnRlciB7CiAgICBhbmltYXRpb246IG5vbmU7CiAgfQp9CgouZG9jewogIG92ZXJmbG93LXg6IHNjcm9sbDsKfQoKCkBrZXlmcmFtZXMgc3Bpbm5lci1ib3JkZXIgewogIHRvIHsKICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7CiAgfQp9CgoKLyppbnB1dDo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiwqLwovKmlucHV0Ojotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uIHsqLwovKiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyovCi8qICBtYXJnaW46IDA7Ki8KLyp9Ki8KLmJveC1jYXJkewogIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOwogIHdpZHRoOiAxMDAlOwogIGJveC1zaGFkb3c6IDAgMXB4IDJweCBoc2woMGRlZyAwJSAwJSAvIDIwJSk7Cgp9CgouYmZvcm1lZGl0IHsKICB3aWR0aDogMTAwJTsKICBtYXJnaW4tdG9wOiAyJTsKfQoKLmRvY3VtZW50ewogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBmbGV4LXdyYXA6IG5vd3JhcDsKICBjb2xvcjpibGFjazsKfQoKLm91ci10ZWFtIHsKICBwYWRkaW5nOiA0MHB4OwogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogMjV2aDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmODA7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIG92ZXJmbG93OiBoaWRkZW47CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIGJvcmRlci1yYWRpdXM6IDUlOwogIC8qYm94LXNoYWRvdzogMCAwIDFyZW0gMCByZ2IoMTM2IDE1MiAxNzAgLyAxNSUpOyovCn0KCgoucGFzc3dvcmQtZm9ybSB7CiAgd2lkdGg6IDEwMCU7CiAgcGFkZGluZzogMjBweDsKCn0KCi5wZXJzb25hbC1wcm9maWxlewogIHdpZHRoOiAxMDAlOwogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7Cn0KCi5vdXItdGVhbSAucGljdHVyZSB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIC8qIGhlaWdodDogMjAlOwogIHdpZHRoOiAyMCU7ICovCiAgbWFyZ2luLWJvdHRvbTogMTBweDsKICB6LWluZGV4OiAxOwp9Cgoub3VyLXRlYW0gLnBpY3R1cmU6OmJlZm9yZSB7CiAgY29udGVudDogIiI7CiAgLyogd2lkdGg6IDIwJTsgKi8KICBoZWlnaHQ6IDA7CiAgYm9yZGVyLXJhZGl1czogMCU7CiAgYmFja2dyb3VuZC1jb2xvcjogIzEzNjljZTsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgYm90dG9tOiAxMzUlOwogIHJpZ2h0OiAwOwogIGxlZnQ6IDA7CiAgb3BhY2l0eTogMC45OwogIHRyYW5zZm9ybTogc2NhbGUoMyk7CiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgbGluZWFyIDBzOwp9Cgoub3VyLXRlYW0gLnBpYyBpbWcgewogIC8qIHdpZHRoOiAxMCU7CiAgaGVpZ2h0OiAyMCU7ICovCiAgYm9yZGVyLXJhZGl1czogMCU7CiAgdHJhbnNmb3JtOiBzY2FsZSgxKTsKICB0cmFuc2l0aW9uOiBhbGwgMC45cyBlYXNlIDBzOwp9Cgoub3VyLXRlYW0gLnBpY3R1cmUgaW1nIHsKICB3aWR0aDogNTAlOwogIGhlaWdodDogNTAlOwogIGJvcmRlci1yYWRpdXM6IDAlOwogIHRyYW5zZm9ybTogc2NhbGUoMSk7CiAgdHJhbnNpdGlvbjogYWxsIDAuOXMgZWFzZSAwczsKfQoKLm91ci10ZWFtIC50aXRsZSB7CiAgZGlzcGxheTogYmxvY2s7CiAgZm9udC1zaXplOiAxNXB4OwogIGNvbG9yOiAjNGU1MDUyOwogIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplOwp9CgouZm9ybS1ncm91cHsKICB3aWR0aDogOTAlOwp9Cgoub3VyLXRlYW0gLnNvY2lhbCB7CiAgd2lkdGg6IDEwMCU7CiAgcGFkZGluZzogMDsKICBtYXJnaW46IDA7CiAgYmFja2dyb3VuZC1jb2xvcjogIzU2NTg1YzsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgYm90dG9tOiAtMTAwcHg7CiAgbGVmdDogMDsKICB0cmFuc2l0aW9uOiBhbGwgMC41cyBlYXNlIDBzOwp9Cgoub3VyLXRlYW06aG92ZXIgLnNvY2lhbCB7CiAgYm90dG9tOiAwOwp9Cgoub3VyLXRlYW0gLnNvY2lhbCBsaSB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwp9Cgoub3VyLXRlYW0gLnNvY2lhbCBsaSBhIHsKICBkaXNwbGF5OiBibG9jazsKICBwYWRkaW5nOiAxMHB4OwogIGZvbnQtc2l6ZTogMTdweDsKICBjb2xvcjogd2hpdGU7CiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZSAwczsKICB0ZXh0LWRlY29yYXRpb246IG5vbmU7Cn0KCi5vdXItdGVhbSAuc29jaWFsIGxpIGE6aG92ZXIgewogIGNvbG9yOiAjNTY1ODVjOwogIGJhY2tncm91bmQtY29sb3I6ICNmN2Y1ZWM7Cn0KCgouc3Bpbm5lci1ib3JkZXIgewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICB3aWR0aDogMXJlbTsKICBoZWlnaHQ6IDFyZW07CiAgdmVydGljYWwtYWxpZ246IHRleHQtYm90dG9tOwogIGJvcmRlcjogMC4yNWVtIHNvbGlkIGN1cnJlbnRDb2xvcjsKICBib3JkZXItcmlnaHQtY29sb3I6IHRyYW5zcGFyZW50OwogIGJvcmRlci1yYWRpdXM6IDUwJTsKICAtd2Via2l0LWFuaW1hdGlvbjogc3Bpbm5lci1ib3JkZXIgMC43NXMgbGluZWFyIGluZmluaXRlOwogIGFuaW1hdGlvbjogc3Bpbm5lci1ib3JkZXIgMC43NXMgbGluZWFyIGluZmluaXRlOwp9CgoucG9pbnRlciB7CiAgY3Vyc29yOiBwb2ludGVyOwp9CgouaW1nLXNpemUgewogIHdpZHRoOiAzMnB4ICFpbXBvcnRhbnQ7CiAgaGVpZ2h0OiAzMnB4ICFpbXBvcnRhbnQ7Cn0KLnNldHRpbmdzLXdyYXAtMm5kewogIHdpZHRoOiA2MCU7Cn0KCgpAbWVkaWEgKG1heC13aWR0aDo5OTlweCkgewogIC5zZXR0aW5ncy13cmFwLTJuZHsKICAgIHdpZHRoOiAxMDAlOwogIH0KICAuZG9jdW1lbnR7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgIGZsZXgtd3JhcDogbm93cmFwOwogICAgY29sb3I6YmxhY2s7CiAgICB3aWR0aDogMzAwcHg7CiAgfQoKICAuYmZvcm1lZGl0IHsKICAgIHdpZHRoOiAxMDAlOwogICAgbWFyZ2luOiAyJTsKICB9CiAgZm9ybXsKICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7CiAgfQogIC5mb3JtLWdyb3VwewogICAgd2lkdGg6IDEwMCU7CiAgfQogIC5wYXNzd29yZC1mb3JtIHsKICAgIHdpZHRoOiAxMDAlOwogICAgcGFkZGluZzogMjBweDsKCiAgfQogIC5zZXR0aW5ncy13cmFwIHsKICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4tcmV2ZXJzZTsKICB9Cn0KCg=="},{"version":3,"sources":["Settings.vue"],"names":[],"mappings":";;AAu8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Settings.vue","sourceRoot":"src/views/settings","sourcesContent":["<template>\n  <div class=\"body\">\n    <blocker-loader v-if=\"loading && loadingOtp && payoutloading && loadingDoc || isLoading\" :message=\"'Setting up Settings Environment'\" position=\"absolute\" background=\"transparent\" zindex=\"999\"></blocker-loader>\n    <div class=\"container mt-0\" v-else>\n      <div class=\"row\">\n        <div class=\"col-lg-12 col-md-12 col-sm-12 col-12\">\n          <div>\n            <el-tabs type=\"card\" @tab-click=\"handleClick\">\n              <el-tab-pane id=\"tab-0\" :key=\"1\" label=\"Profile\" :class=\"!loading ? 'card': ''\">\n                <div v-if=\"loading\" class=\"accordion skeletonLoader\" role=\"tablist\" style=\"background-color:#f8f9fe; transition: all 200ms ease-in-out;\">\n                  <div no-body class=\"mb-1 add-bank-form\">\n                    <div header-tag=\"header\" class=\"p-1\" role=\"tab\">\n                      <div block v-b-toggle.accordion-1 variant=\"none\" class=\"p-3\" style=\"color:black;\">\n                        <h3 class=\"animateSkeleton\"></h3>\n                        <p  class=\"animateSkeleton\"></p>\n                      </div>\n                    </div>\n                  </div>\n                  <hr />\n\n                  <div no-body class=\"mb-1\">\n                    <div header-tag=\"header\" class=\"p-1\" role=\"tab\">\n                      <div block v-b-toggle.accordion-2 variant=\"none\" class=\"p-3\" style=\"color:black;\">\n                        <h3 class=\"animateSkeleton\"></h3>\n                        <p  class=\"animateSkeleton\"></p>\n                      </div>\n                    </div>\n                  </div>\n                  <hr />\n                  <div no-body class=\"mb-1\">\n                    <div header-tag=\"header\" class=\"p-1\" role=\"tab\">\n                      <div block v-b-toggle.accordion-3 variant=\"none\" class=\"p-3\" style=\"color:black;\">\n                        <h3 class=\"animateSkeleton\"></h3>\n                        <p  class=\"animateSkeleton\"></p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"accordion\" role=\"tablist\" v-else>\n                  <div no-body class=\"mb-1 add-bank-form\">\n                    <div header-tag=\"header\" class=\"p-1\" role=\"tab\">\n                      <div block v-b-toggle.accordion-1 variant=\"none\" class=\"p-3\" style=\"color:black;\">\n                        <h3>\n                          Personal Info 🔽\n                        </h3>\n                        <p>You can update your personal info here.</p>\n                      </div>\n                    </div>\n                    <b-collapse id=\"accordion-1\" accordion=\"my-accordion\" role=\"tabpanel\">\n                      <div>\n                        <div class=\"p-3\" v-if=\"!loading\">\n                          <div class=\"personal-profile\">\n                            <b-form class=\"container p-3 form-group\">\n                              <div class=\"form-floating mb-3\">\n                                <input type=\"email\" class=\"form-control\"\n                                  placeholder=\"name@example.com\" :value=\"\n                                    null ? '' : userInfo?.customerFirstName\n                                  \" readonly />\n                                <label for=\"floatingInput1\">First Name</label>\n                              </div>\n                              <div class=\"form-floating mb-3\">\n                                <input type=\"email\" class=\"form-control\"\n                                  placeholder=\"name@example.com\" :value=\"null ? '' : userInfo?.customerLastName\"\n                                  readonly />\n                                <label for=\"floatingInput2\">Last Name</label>\n                              </div>\n                              <div class=\"form-floating mb-3\">\n                                <input type=\"tel\" class=\"form-control\"\n                                  placeholder=\"name@example.com\" :value=\"null ? '' : userInfo?.customerPhone\" readonly />\n                                <label for=\"floatingInput3\">Phone Number</label>\n                              </div>\n                              <div class=\"form-floating mb-3\">\n                                <input type=\"email\" class=\"form-control\"\n                                  placeholder=\"name@example.com\" :value=\"null ? '' : userInfo?.customerEmail\" readonly />\n                                <label>Email</label>\n                              </div>\n                              <base-button title=\"Update\" disabled></base-button>\n                            </b-form>\n                          </div>\n                        </div>\n                      </div>\n                    </b-collapse>\n                  </div>\n                  <hr />\n                  <div no-body class=\"mb-1\">\n                    <div header-tag=\"header\" class=\"p-1\" role=\"tab\">\n                      <div block v-b-toggle.accordion-2 variant=\"none\" class=\"p-3\" style=\"color:black;\">\n                        <h3>\n                          Business Information 🔽\n                        </h3>\n                        <p>\n                          Update your business information here\n                        </p>\n                      </div>\n                    </div>\n                    <b-collapse id=\"accordion-2\" accordion=\"my-accordion\" role=\"tabpanel\" >\n                        <UpdateBusinessProfile></UpdateBusinessProfile>\n                    </b-collapse>\n                  </div>\n                  <hr />\n                  <div no-body class=\"mb-1\">\n                    <div header-tag=\"header\" class=\"p-1\" role=\"tab\">\n                      <div block v-b-toggle.accordion-3 variant=\"none\" class=\"p-3\" style=\"color:black;\">\n                        <h3>\n                          Document upload 🔽\n                        </h3>\n                        <p>\n                          Submit important documents about your business. This will help us verify your business and have your account upgraded.\n                        </p>\n                      </div>\n                    </div>\n                    <b-collapse id=\"accordion-3\" accordion=\"my-accordion\" role=\"tabpanel\">\n                      <div>\n                        <div style=\"\n                            width: 100%;\n                            display: flex;\n                            justify-content: center;\n                            align-items: center;\n                            color:black;\n                          \">\n                          <div>\n                            <div class=\"\">\n                              <span :class=\"{ 'spinner-border': loadingDoc }\"></span>\n                              <div class=\"doc\">\n                                <div>\n                                  <!-- Card body -->\n                                  <div class=\"document\" v-if=\"documents.data.length > 1\">\n                                    <div class=\"\" v-for=\"(doc, index) in documents.data\" :key=\"index\">\n                                      <div v-if=\"'documentStatus' in doc && 'documentUrl' in doc\">\n<!--                                        <span>{{progressBarArr[index].value}}</span>-->\n                                        <div class=\"our-team\">\n<!--                                          <progress-bar v-show=\"progressBarArr[index].value\"></progress-bar>-->\n                                          <div class=\"picture\">\n                                            <img v-if=\"doc.documentStatus === 'PENDING'\" class=\"img-fluid img-size\" src=\"https://coregem-imgs.s3.amazonaws.com/document-amber.png\" />\n                                            <img v-else-if=\"doc.documentStatus === 'APPROVED'\" class=\"img-fluid img-size\" src=\"https://coregem-imgs.s3.amazonaws.com/document-green.png\" />\n                                            <img v-else-if=\"doc.documentStatus === 'REJECTED'\" class=\"img-fluid img-size\" src=\"https://coregem-imgs.s3.amazonaws.com/document-red.png\" />\n                                          </div>\n                                          <div class=\"team-content\">\n                                            <h6 class=\"name\">\n                                              {{ doc.documentTypeName }}\n                                            </h6>\n                                            <span :class=\"{\n                                              'text-success':\n                                                doc.documentStatus ===\n                                                'APPROVED',\n                                              'text-warning':\n                                                doc.documentStatus ===\n                                                'PENDING',\n                                              'text-danger':\n                                                doc.documentStatus ===\n                                                'REJECTED',\n                                            }\">●</span>\n                                            <small>{{\n                                                doc.documentStatus\n                                              }}</small>\n                                          </div>\n                                          <ul class=\"social\">\n                                            <li>\n                                              <a :href=\"doc.documentUrl\" target=\"_blank\" class=\"\n                                                  pointer\n                                                  fas\n                                                  fa-cloud-download-alt\n                                                \" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Download\"\n                                                 aria-hidden=\"true\"></a>\n                                            </li>\n                                            <li v-show=\"doc.documentStatus !=='APPROVED'\">\n                                              <label class=\"pointer\" data-toggle=\"tooltip\" data-placement=\"down\"\n                                                     title=\"Update\" aria-hidden=\"true\">\n\n                                                <input type=\"file\" :ref=\"'file-input' + index\"\n                                                       accept=\"application/pdf, image/*\" :id=\"'myfile' + index\" style=\"\n                                                    display: none;\n                                                    z-index: 1;\n                                                  \" @change=\"\n                                                    handleImages(\n                                                      $event,\n                                                      index,\n                                                      doc,\n                                                      'UPDATE'\n                                                    )\n                                                  \" />\n                                                <i class=\"fas fa-edit\" title=\"Update\" style=\"color: white\"></i>\n                                              </label>\n                                            </li>\n                                          </ul>\n                                        </div>\n                                      </div>\n                                      <div v-else>\n                                        <form @submit.prevent=\"submitDocument(index, doc)\" :id=\"'form' + index\">\n<!--                                          <p v-show=\"progressBarArr[index]\" class=\"form-error-message\"> The File is required </p>-->\n                                          <div class=\"our-team\">\n<!--                                            <progress-bar v-show=\"-->\n<!--                                              progressBarArr[index].value-->\n<!--                                            \"></progress-bar>-->\n                                            <div class=\"picture\">\n                                              <label class=\"pointer\">\n                                                <input type=\"file\" :ref=\"'file-input' + index\" style=\"display: none;\"  accept=\"application/pdf, image/*\" :id=\"'myfile' + index\" @change=\"\n                                                  handleImages(\n                                                    $event,\n                                                    index,\n                                                    doc,\n                                                    'CREATE'\n                                                  )\n                                                \"/>\n                                                <img class=\"img-fluid img-size\" src=\"https://coregem-imgs.s3.amazonaws.com/document-grey.png\" alt=\"\"/>\n                                              </label>\n                                            </div>\n                                            <div class=\"team-content mt--2\">\n                                              <small class=\"name\">Click &#x1F446; to upload\n                                                file</small>\n\n                                              <h6 class=\"name\">\n                                                {{ doc.documentTypeName }}\n                                              </h6>\n                                            </div>\n                                          </div>\n                                        </form>\n                                      </div>\n                                    </div>\n                                  </div>\n                                  <div v-else>\n                                    <h3>no document to show</h3>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </b-collapse>\n                  </div>\n                </div>\n              </el-tab-pane>\n\n              <el-tab-pane id=\"tab-2\" :key=\"2\" label=\"User Management\">\n                <div class=\"box-card\">\n                  <div class=\"pl-4 pr-4 pt-2\" style=\"display: flex;justify-content: space-between;margin-top: 2%\">\n                  <div>\n                      <h3 class=\"text-dark\">Users</h3>\n                  </div>\n                  </div>\n                  <BaseTable\n                    :items=\"readCustomers.data\"\n                    :fields=\"customerFields\"\n                  />\n                  <b-modal id=\"modal-md\" hide-backdrop size=\"sm\" hide-footer title=\"Invite A User\">\n                  <form @submit.prevent=\"processInvite\" style=\"align-items:center;justify-content:center;display: flex;flex-direction: column\">\n                    <b-form-group label=\"User Email\">\n                      <!-- <div style=\"position:absolute;top:-10px;\" class=\"bg-info small text-white p-1\">Invite a user and assign roles to users</div>-->\n                      <b-form-input placeholder=\"useremail@anymail.com\" required v-model=\"inviteUserModel.customerEmail\" type=\"email\" style=\"width: 100%\"></b-form-input>\n                    </b-form-group>\n                    <b-form-group label=\"User Role\">\n                        <base-input>\n                          <el-select class=\"select-danger\" filterable placeholder=\"Select user role\" required  v-model=\"inviteUserModel.customerRole\">\n                            <el-option v-if=\"readOrganisationRoles.length > 1\" v-for=\"(item, index) in readOrganisationRoles\" :key=\"index\" :value=\"item.roleName\" :label=\"item.roleName\" class=\"select-danger\"></el-option>\n                          </el-select>\n                        </base-input>\n                    </b-form-group>\n                    <b-form-group>\n                      <b-button :disabled=\"loadingOtp\"  :style=\"{backgroundColor:primaryColor,color:'#fff', width:'100%'}\" type=\"submit\">\n                        {{ loadingOtp ? \"Please wait\" : \"Proceed\" }}</b-button>\n                    </b-form-group>\n                  </form>\n                </b-modal>\n                  <edit-organisation-user :show-organisation-user-form=\"showUserEditForm\"  @closeUserForm=\"updateCloseEditFrom\"/>\n                  <reset-terminal-pin :show-organisation-user-form=\"showUserEditForm\" @closeResetForm=\"updateCloseEditFrom\"/>\n                  <termina-logout-modal :show-organisation-user-form=\"showUserEditForm\" @closeLogoutForm=\"updateCloseEditFrom\"/>\n                </div>\n                <div class=\"box-card\">\n                  <div class=\"pl-4 pr-4 pt-2\" style=\"display: flex;justify-content: space-between;margin-top: 2%\">\n                    <div>\n                      <h3 class=\"text-dark\">Pending Invites</h3>\n                    </div>\n                    <b-button :style=\"{backgroundColor:primaryColor,color:'#fff'}\" v-b-modal.modal-md> Invite User</b-button>\n                  </div>\n                  <BaseTable\n                    :items=\"readAllInvites\"\n                    :fields=\"inviteFields\"\n                  />\n                </div>\n              </el-tab-pane>\n\n              <el-tab-pane id=\"tab-8\" :key=\"8\" name=\"eight\" label=\"Change Password\">\n                <div class=\"settings-wrap\">\n                  <div class=\"settings-wrap-2nd\">\n                    <form @submit.prevent=\"changePassword()\" class=\"password-form\">\n                      <div class=\"form-floating mb-3\">\n                        <i class=\"fa fa-eye\" style=\"position: absolute;right: 10px;top: 5px;cursor: pointer\" @click=\"hide$show\" id=\"eye\"></i>\n                        <input type=\"password\" class=\"form-control\"  id=\"pwd\" v-model=\"changePasswordModel.customerOldPassword\" required>\n                        <label>Old password</label>\n                      </div>\n                         <div class=\"form-floating mb-3\">\n                           <input type=\"password\" class=\"form-control\"  id=\"pwd2\" v-model=\"changePasswordModel.customerPassword\" required>\n                        <label>New password</label>\n                      </div>\n                       <div class=\"form-floating mb-3\">\n                         <input type=\"password\" class=\"form-control\"  id=\"pwd3\" v-model=\"changePasswordModel.customerPasswordConfirmation\" required>\n                        <label>Confirm new password</label>\n                      </div>\n                      <div class=\"\">\n                      <base-button type=\"submit\" title='Change' :loading=\"loadingOtp\"></base-button>\n                          </div>\n                    </form>\n                    </div>\n                </div>\n              </el-tab-pane>\n\n              <el-tab-pane id=\"tab-5\" :key=\"5\" name=\"five\" label=\" API Keys and Webhooks\">\n                <div style=\"display: flex;justify-content: flex-end;margin-bottom: 2%\">\n                  <b-button :style=\"{\n                            backgroundColor:primaryColor,\n                            border: 'none',\n                            color: '#fff'}\"\n                            v-b-modal.modal-sm>Regenerate Api Key\n                  </b-button>\n                </div>\n                <div class=\"settings-wrap\">\n                  <div class=\"settings-wrap-2nd\">\n                    <div>\n                      <api-key-display-form> </api-key-display-form>\n                    </div>\n                  </div>\n                  <b-modal id=\"modal-sm\" hide-backdrop size=\"sm\" title=\"Regenerate Api key\">\n                    You are about to regenerate new API keys.\n                    Proceeding with this action will invalidate your existing API keys and subsequent\n                    request headers must be passed with your newly generated keys\n                    <template #modal-footer=\"{ cancel }\">\n                      <!-- Emulate built in modal footer ok and cancel button actions -->\n                      <b-button size=\"md\"  @click=\"regenerateApiKey()\" :disabled=\"apikeyloading\">\n                        {{ apikeyloading ? 'Regenerating..' : 'Proceed'}}\n                      </b-button>\n                      <!-- Button with custom close trigger value -->\n                    </template>\n                  </b-modal>\n\n                </div>\n              </el-tab-pane>\n\n              <el-tab-pane id=\"tab-6\" :key=\"6\" name=\"six\" label=\" Bank Account\">\n                <div style=\"display: flex;justify-content: flex-end;margin-bottom: 2%\" v-if=\"!Object.values(payoutAccount).every((o) => o === null)\">\n                  <b-button @click=\"showedit()\" :style=\"{backgroundColor:primaryColor,color:'#fff'}\"> {{!edit ? 'Update' : 'Cancel' }}</b-button>\n                </div>\n                <div class=\"settings-wrap\">\n                  <div>\n                    <lottie-player src=\"https://assets5.lottiefiles.com/packages/lf20_kK73MQ.json\"  background=\"transparent\"  speed=\"1\"  style=\"width: 500px; height: 500px;\"  loop  autoplay></lottie-player>\n                  </div>\n                  <div class=\"settings-wrap-2nd\">\n                    <div class=\"text-center p-3\" v-if=\"payoutloading\" style=\"\n                        display: flex;\n                        width: 100%;\n                        height: 60vh;\n                        justify-content: center;\n                        align-items: center;\n                      \">\n                      <div>\n                        <h5>Please wait! Bizgem is checking your bank details.</h5>\n                      </div>\n                    </div>\n\n                    <div v-if=\"!Object.values(payoutAccount).every((o) => o === null)\">\n                      <div class=\"p-3\" v-if=\"!payoutloading\">\n                        <div>\n                          <div class=\"text-center\" v-if=\"edit == false\">\n                            <i class=\"fa fa-university\" style=\"font-size: 50px\"></i>\n                            <h4>Current bank details</h4>\n                          </div>\n                          <div class=\"text-center\" v-else>\n                            <i class=\"fa fa-university\" style=\"font-size: 50px\"></i>\n                            <h4>Edit bank details</h4>\n                          </div>\n                          <div v-if=\"edit == false\">\n                              <div style=\"width: 100%;\">\n                                  <div class=\"form-floating mb-3\">\n                                    <input type=\"email\" class=\"form-control\" id=\"floatingInput1\"\n                                      placeholder=\"name@example.com\" :value=\"\n                                        null ? '' : readonlybank.accountBankName\n                                      \" readonly />\n                                    <label for=\"floatingInput1\">Bank Name</label>\n                                  </div>\n                                  <div class=\"form-floating mb-3\">\n                                    <input type=\"email\" class=\"form-control\" id=\"floatingInput2\"\n                                      placeholder=\"name@example.com\" :value=\"null ? '' : readonlybank.accountName\"\n                                      readonly />\n                                    <label for=\"floatingInput2\">Bank Holder Name</label>\n                                  </div>\n                                  <div class=\"form-floating mb-3\">\n                                    <input type=\"tel\" class=\"form-control\" id=\"floatingInput3\"\n                                      placeholder=\"name@example.com\" :value=\"\n                                        null ? '' : readonlybank.accountNumber\n                                      \" readonly />\n                                    <label for=\"floatingInput3\">Bank Account Number</label>\n                                  </div>\n                              </div>\n                          </div>\n                        <div  v-else>\n                          <form class=\"bformedit\" @submit.prevent=\"editBank()\">\n                            <label class=\"\">Select Payout Bank</label>\n                            <base-input >\n                                <el-select class=\"select-danger w-100\" filterable placeholder=\"Bank Name\" required\n                                  v-model=\"createPayoutAccountModel.accountBankName\">\n                                  <el-option v-for=\"bank in banks\" class=\"select-danger\" :value=\"bank.value\"\n                                    :label=\"bank.label\" :key=\"bank.value\">\n                                  </el-option>\n                                </el-select>\n                              </base-input>\n                            <label class=\"mt-3\">Account Number</label>\n                              <b-form-input  id=\"input-4\" type=\"number\" placeholder=\"Account Number\"\n                                v-model=\"createPayoutAccountModel.accountNumber\" class=\"mr-2 mb-3\" required></b-form-input>\n                              <label class=\"\">Account Name</label>\n                              <b-form-input id=\"input-5\" type=\"text\" placeholder=\"Account Name\"\n                                v-model=\"createPayoutAccountModel.accountName\" class=\"mr-2 mb-3\" required>\n                              </b-form-input>\n                              <div class=\"d-flex mb-3\">\n                                <b-form-input id=\"input-5\" type=\"number\" placeholder=\"OTP\" class=\"mr-2\" required\n                                  v-model=\"createPayoutAccountModel.otp\"></b-form-input>\n                                <span v-if=\"timerCount > 0\" class=\"m-2 small text-dark\" style=\"width: 30%\">Resend OTP in {{ timerCount }}</span>\n                                <b-button @click=\"sendOtp()\" v-else style=\"width: 30%\">{{ loadingOtp ? \"Sending\" : \"Send OTP\" }}\n                                  <span :class=\"{ 'spinner-border': loadingOtp }\"></span>\n                                </b-button>\n                              </div>\n                            <b-button class=\"w-100 text-white\" :style=\"{backgroundColor:primaryColor,color:'#fff'}\" type=\"submit\">{{\n                                createloader ? \"Updating\" : \"Update Bank\"\n                            }}\n                              <span :class=\"{ 'spinner-border': createloader }\"></span>\n                            </b-button>\n                          </form>\n                        </div>\n                        </div>\n                      </div>\n                    </div>\n\n\n                    <div v-else>\n                      <div class=\"text-center p-3\" v-if=\"!payoutloading\" style=\"\n                          display: flex;\n                          width: 100%;\n                          height: 60vh;\n                          justify-content: center;\n                          align-items: center;\n                        \">\n                        <add-bank @closeCreateBank=\"updateCreateBank\" :showCreateBank=\"show\"></add-bank>\n\n                        <div>\n                          <i class=\"fa fa-ban\" aria-hidden=\"true\" style=\"font-size: 46px; margin: 10px\"></i>\n                          <h5>You do not have any payout bank account added.</h5>\n                          <b-button @click=\"show = true\">Add Bank</b-button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </el-tab-pane>\n\n<!--              <el-tab-pane id=\"tab-7\" :key=\"7\" name=\"seven\" label=\"Preference\">-->\n<!--                <div class=\"settings-wrap\">-->\n<!--                  <div style=\"width: 100%\">-->\n<!--                       <div>-->\n<!--                         <div class=\"preference-area\">-->\n<!--                             <form  class=\"preference-form\" @submit.prevent=\"createPreference\">-->\n<!--                               <div class=\"preference-item\">-->\n<!--                                 <div>-->\n<!--                                   <span>Allow Notification <b-icon-info-circle-fill/> </span>-->\n<!--                                 </div>-->\n<!--                                 <div>-->\n<!--                                   <toggle-button @change=\"switchPreferenceNotification()\"  :value=\"true ? preferenceData.preferenceAllowNotification ==='YES' : false\" :labels=\"{checked:'on',unchecked:'off'}\"/>-->\n<!--                                 </div>-->\n<!--                               </div>-->\n<!--                               <div class=\"preference-item\">-->\n<!--                                 <div>-->\n<!--                                   <span>Revenue Profit Wallet <b-icon-info-circle-fill/> </span>-->\n<!--                                 </div>-->\n<!--                                 <div>-->\n<!--                                   <base-input>-->\n<!--                                     <el-select class=\"select-danger w-100\" filterable placeholder=\"Select Wallet\" required-->\n<!--                                                v-model=\"preferenceData.preferenceRevenueProfitWallet\">-->\n<!--                                       <el-option v-for=\"i in wallet.data\" class=\"select-danger\" :value=\"i.accountName\"-->\n<!--                                                  :label=\"i.accountName\" :key=\"i.accountId\">-->\n<!--                                       </el-option>-->\n<!--                                     </el-select>-->\n<!--                                   </base-input>-->\n<!--                                 </div>-->\n<!--                               </div>-->\n<!--                               <div class=\"preference-item\">-->\n<!--                                 <div>-->\n<!--                                   <span>Commission Margin <b-icon-info-circle-fill/> </span>-->\n<!--                                 </div>-->\n<!--                                 <b-input-group append=\"%\" style=\"width: 27%\">-->\n<!--                                   <b-form-input type=\"number\"   v-model=\"preferenceData.preferenceCommissionMargin\" min=\"0\" max=\"1000\"></b-form-input>-->\n<!--                                 </b-input-group>-->\n<!--                               </div>-->\n<!--                               <div class=\"preference-item\">-->\n<!--                                 <div>-->\n<!--                                   <span>Fee Margin <b-icon-info-circle-fill/> </span>-->\n<!--                                 </div>-->\n<!--                                   <b-input-group append=\"%\" style=\"width: 27%\">-->\n<!--                                     <b-form-input type=\"number\"   v-model=\"preferenceData.preferenceFeeMargin\" min=\"0\" max=\"1000\"></b-form-input>-->\n<!--                                   </b-input-group>-->\n<!--                               </div>-->\n<!--                               <b-button :disabled=\"loadingPreference\"  :style=\"{backgroundColor:primaryColor,color:'#fff', width:'100%'}\" type=\"submit\">{{ loadingPreference ? \"Saving\" : \"Save Preference\" }}</b-button>-->\n<!--                             </form>-->\n<!--                         </div>-->\n<!--                       </div>-->\n<!--                  </div>-->\n<!--                </div>-->\n<!--              </el-tab-pane>-->\n            </el-tabs>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nconst sort_by = (field, reverse, primer) => {\n  const key = primer ?\n      function(x) {\n        return primer(x[field])\n      } :\n      function(x) {\n        return x[field]\n      };\n\n  reverse = !reverse ? 1 : -1;\n\n  return function(a, b) {\n    return a = key(a), b = key(b), reverse * ((a > b) - (b > a));\n  }\n}\nimport { mapState } from \"vuex\";\nimport ApiKeyDisplayForm from \"../../components/form/ApiKeyDisplayForm\";\nimport { DropdownMenu, DropdownItem, Dropdown } from \"element-ui\";\nimport StoreUtils from \"../../util/baseUtils/StoreUtils\";\nimport ApikeyRequest from \"../../model/request/ApiKeyRequest\";\nimport DocumentRequest from \"../../model/request/DocumentRequest\";\nimport VirtualAccountRequest from \"../../model/request/VirtualAccountRequest\";\nimport BaseButton from \"../../components/button/BaseButton\";\nimport AuthenticationRequest from \"../../model/request/AuthRequest\";\nimport AccountPayoutRequest from \"../../model/request/AccountPayoutRequest\";\nimport ProgressBar from \"@/components/ProgressBar\";\nimport AddBank from \"../../components/form/AddBankForm\";\nimport BlockerLoader from \"../../components/BlockerLoader\";\nimport ChangePasswordRequest from \"@/model/request/ChangePasswordRequest\";\nimport Toast from \"../../../toastNotification\";\nimport UpdateBusinessProfile from \"../../components/UpdateBusinessProfile\";\nimport BaseTable from \"../../components/table/BaseTable\";\nimport OrganisationRequest from \"../../model/request/OrganisationRequest\";\nimport EditOrganisationUser from \"../../components/form/EditOrganisationUser\";\nimport PreferenceRequest from \"../../model/request/PreferenceRequest\";\nimport ResetTerminalPin from \"../../components/form/ResetTerminalPin\";\nimport TerminaLogoutModal from \"../../components/form/TerminaLogoutModal\";\nexport default {\n  name: \"Settings\",\n  components: {\n    [Dropdown.name]: Dropdown,\n    [DropdownItem.name]: DropdownItem,\n    [DropdownMenu.name]: DropdownMenu,\n    ApiKeyDisplayForm,\n    BaseButton,\n    // ProgressBar,\n    AddBank,\n    BlockerLoader,\n    UpdateBusinessProfile,\n    BaseTable,\n    EditOrganisationUser,\n    ResetTerminalPin,\n    TerminaLogoutModal\n  },\n  data() {\n    return {\n      show: false,\n      togglePreference:\"INACTIVE\",\n      preferenceModal:PreferenceRequest.preferenceCreate,\n      preferenceAllowNotification:\"NO\",\n      rangeValue:'0',\n      primaryColor:window.__env.app.primaryColor,\n      showModalDirector1:false,\n      showModalDirector2:false,\n      sendOtpModel: AuthenticationRequest.resendOtp,\n      inviteUserModel:OrganisationRequest.inviteCustomer,\n      readbanklistModel: VirtualAccountRequest.getBankList,\n      createPayoutAccountModel: AccountPayoutRequest.createAccountPayout,\n      readPayoutAccountModel: AccountPayoutRequest.readAccountPayoutById,\n      changePasswordModel:ChangePasswordRequest.changePassword,\n      files: [],\n      banks: [],\n      walletsData:[],\n      organisationRoles:[],\n      progressBarArr: [],\n      apikeyModel: ApikeyRequest.regenerateApiKey,\n      documentModel: DocumentRequest.createDocument,\n      readDoc: DocumentRequest.readDocument,\n      timerCount: 0,\n      edit: false,\n      isEditing:true,\n      updatePreferenceModel:PreferenceRequest.preferenceUpdateStatus,\n      inviteFields:[\n        { key: \"inviteCustomerEmail\", label: \"Email\" },\n        { key: \"inviteCustomerRole\", label: \"Role\" },\n        { key: \"inviteStatus\", label: \"Status\" },\n        { key: \"inviteCreatedAt\", label: \"Date Created\"},\n        { key: \"inviteUpdatedAt\", label: \"Updated\" },\n        { key: \"action\", label: \"Actions\" },\n      ],\n      customerFields:[\n        { key: \"customerFirstName\", label: \"First Name\" },\n        { key: \"customerLastName\", label: \"Last Name\" },\n        { key: \"customerEmail\", label: \"Email\" },\n        { key: \"customerPhone\", label: \"Phone\" },\n        // { key: \"organisationType\", label: \"Organisation Type\" },\n        { key: \"customerOrganisationRole\", label: \"User Role\" },\n        { key: \"customerOrganisationStatus\", label: \"Status\" },\n        { key: \"customerOrganisationTerminalId\", label: \"Terminal ID\" },\n        { key: \"CustomerAction\", label: \"Actions\" },\n\n      ]\n    };\n  },\n\n  computed: {\n    sortOptions() {\n      // Create an options list from our fields\n      return this.fields\n        .filter((f) => f.sortable)\n        .map((f) => {\n          return { text: f.label, value: f.key };\n        });\n    },\n    ...mapState({\n      userInfo: (state) => state.auth.userInfo,\n      loading: (state) => state.virtualAccount.loading,\n      loadingOtp: (state) => state.auth.loading,\n      loadingDoc: (state) => state.document.loading,\n      bankList: (state) => state.virtualAccount.bankList,\n      loadingPreference:(state) => state.preference.loading,\n      payoutAccount: (state) => state.accountPayout.addedBanks,\n      payoutloading: (state) => state.accountPayout.accloading,\n      readonlybank: (state) => state.accountPayout.readOnlyAddedBanks,\n      createloader: (state) => state.accountPayout.addbankloading,\n      apikeyloading: (state) => state.apiKey.loading,\n      // documents:(state) => state.document.document\n      readCustomers: (state) => state.auth.allCustomers,\n      readOrganisationRoles: (state) => state.auth.organisationRoles,\n      readAllInvites:state => JSON.parse(JSON.stringify(state.auth.allInvites))?.sort(sort_by('inviteId', true, parseInt)),\n      showUserEditForm:state => state.auth.userEditForm,\n      preferenceData:state => state.preference.preference,\n      wallet: (state) => state.walletTransactions.wallets,\n      preferenceState:(state) => state.preference.preferenceState,\n      isLoading:state => state.auth.loginLoading\n\n    }),\n\n    documents: () => {\n      // console.log(\"progressBarArr\");\n      let vm = this;\n      let doc = StoreUtils.rootGetters(StoreUtils.getters.document.getDocuments);\n      // console.log(\"progressBarArr\", doc.data.length);\n      //vm.progressBarArr = [...Array(doc.data.length)].fill(false)\n      /*for(let i = 0; i < doc.data.length; i++){\n        vm.progressBarArr[i] = false\n        console.log(\"progressBarArr\",i)\n      }*/\n      return doc;\n    },\n\n    currentOrganisation() {\n      return StoreUtils.rootGetters(StoreUtils.getters.auth.getCurrentOrganization)\n    },\n  },\n\n  watch: {\n    documents(newValue) {\n      // console.log(\"progressBarArrNew\", newValue.data.length);\n      this.progressBarArr = [];\n      //this.progressBarArr = [...Array(newValue.data.length)].fill(false)\n      for (let i = 0; i < newValue.data.length; i++) {\n        this.progressBarArr.push({\n          value: false,\n        });\n        // console.log(\"progressBarArr\", i);\n      }\n    },\n\n    timerCount: {\n      handler(value) {\n        if (value > 0) {\n          setTimeout(() => {\n            this.timerCount--;\n          }, 1000);\n        }\n      },\n      //immediate: true, // This ensures the watcher is triggered upon creation\n    },\n\n    bankList(newValue, oldValue) {\n      if (this.bankList.length !== 0) {\n        //if(this.bankList.data.length!==0){\n        let bank = [];\n        bank = this.bankList;\n        this.banks = bank.map((item) => {\n          return {\n            value: `${item.name} ${item.code}`,\n            label: `${item.name}`,\n          };\n        });\n      }\n    },\n  },\n\n  mounted() {\n    StoreUtils.dispatch(StoreUtils.actions.virtualAccount.updateReadBankList).then();\n  },\n\n  //\n  // beforeMount() {\n  //   window.addEventListener(\"beforeunload\", this.preventNav)\n  // },\n  //\n  // beforeUnmount() {\n  //   window.removeEventListener(\"beforeunload\", this.preventNav);\n  // },\n\n  // beforeRouteLeave(to, from, next) {\n  //   if (this.isEditing == 'true') {\n  //     if (!window.confirm(\"\")) {\n  //       return;\n  //     }\n  //   }\n  //   next();\n  // },\n\n  methods: {\n    switchPreferenceNotification(){\n      if(this.preferenceData.preferenceAllowNotification === \"NO\"){\n        this.preferenceAllowNotification = \"YES\"\n      }else{\n        this.preferenceAllowNotification = \"NO\"\n      }\n      this.preferenceData.preferenceAllowNotification = this.preferenceAllowNotification\n    },\n\n    togglePreferenceAction(){\n      if(this.preferenceState === \"create\") StoreUtils.commit(StoreUtils.mutations.preference.updatePreferenceState, 'edit')\n      StoreUtils.commit(StoreUtils.mutations.preference.updatePreferenceState, 'create')\n      // if(){\n      //   this.togglePreference = \"ACTIVE\"\n      // } else{\n      //   this.togglePreference = \"INACTIVE\"\n      // }\n      // this.updatePreferenceModel.preferenceStatus = this.togglePreference\n      // StoreUtils.dispatch(StoreUtils.actions.preference.updatePreferenceStatus, this.updatePreferenceModel)\n    },\n\n    createPreference(){\n      this.preferenceModal.preferenceFeeMargin = this.preferenceData.preferenceFeeMargin\n      this.preferenceModal.preferenceCommissionMargin = this.preferenceData.preferenceCommissionMargin\n      this.preferenceModal.preferenceRevenueProfitWallet = this.preferenceData.preferenceRevenueProfitWallet\n      this.preferenceModal.preferenceAllowNotification = this.preferenceAllowNotification\n\n      if(this.preferenceData.responseCode === \"00\"){\n        StoreUtils.dispatch(StoreUtils.actions.preference.updatePreference)\n      }else{\n        StoreUtils.dispatch(StoreUtils.actions.preference.createPreference).then()\n      }\n    },\n\n    processInvite(){\n      StoreUtils.dispatch(StoreUtils.actions.auth.inviteCustomer, this.inviteUserModel).then(() => {\n        document.getElementById('modal-md').click()\n      })\n    },\n\n    updateCloseEditFrom(value) {\n      StoreUtils.commit(StoreUtils.mutations.auth.updateUserEditForm, value)\n    },\n    preventNav(event) {\n      if (!this.isEditing) return\n      event.preventDefault()\n      event.returnValue = \"\"\n    },\n    updateCreateBank(value) {\n      this.show = value;\n    },\n    showedit() {\n      this.edit = !this.edit;\n    },\n    changePassword() {\n      this.changePasswordModel.customerEmail = this.userInfo.customerEmail\n      StoreUtils.dispatch(StoreUtils.actions.auth.changePassword, this.changePasswordModel).then(() => {\n        this.changePasswordModel = \"\"\n      })\n    },\n    handleImages(e, index, doc, action) {\n      const vm = this;\n      const selectedImage = e.target.files[0];\n      this.createBase64Images(selectedImage, index, doc, action);\n      // console.log(selectedImage);\n    },\n    createBase64Images(fileObject, index, doc, action) {\n      const img_reader = new FileReader();\n      const vm = this;\n      img_reader.onload = (e) => {\n        vm.files[index] = e.target.result;\n        // console.log(this.files[index]);\n        vm.submitDocument(index, doc, action);\n        //vm.notifyVue(\"success\",\"Click on Submit\");\n      };\n      img_reader.readAsDataURL(fileObject);\n    },\n\n    editBank() {\n      let bankArray = this.createPayoutAccountModel.accountBankName.split(\" \")\n      let bankCode =bankArray[bankArray.length-1];\n      let bankName = this.createPayoutAccountModel.accountBankName.replace(bankCode,\"\").trim();\n      this.createPayoutAccountModel.accountCountry = this.userInfo.customerCountry;\n      this.createPayoutAccountModel.accountOrganisationId = this.currentOrganisation.customerOrganisationCustomerId;\n      this.createPayoutAccountModel.username = this.currentOrganisation.organisationEmail;\n      this.createPayoutAccountModel.accountBankCode = bankCode;\n      this.createPayoutAccountModel.accountBankName = bankName;\n      StoreUtils.dispatch(StoreUtils.actions.accountPayout.editAddedBanks, this.createPayoutAccountModel).then(() => {\n        this.createPayoutAccountModel.otp = null;\n        this.createPayoutAccountModel.accountName = null;\n        this.createPayoutAccountModel.accountBankName = null;\n        this.createPayoutAccountModel.accountBankCode = null;\n        this.createPayoutAccountModel.accountNumber = null\n\n        this.readPayoutAccountModel.accountOrganisationId =\n          localStorage.organisationId;\n        StoreUtils.dispatch(\n          StoreUtils.actions.accountPayout.readAddedBanks,\n          this.readPayoutAccountModel\n        );\n        this.edit = false\n      });\n    },\n\n    sendOtp() {\n      this.sendOtpModel.customerEmail = this.userInfo.customerEmail;\n      StoreUtils.dispatch(\n        StoreUtils.actions.auth.resendOtp,\n        this.sendOtpModel\n      ).then(() => {\n        Toast.fire({\n          text: `Otp Sent to ${this.userInfo.customerEmail}`,\n          icon: \"success\",\n        });\n        this.timerCount = 30;\n        this.startTimer();\n      });\n    },\n\n    startTimer(duration) {\n      let timer = duration,\n        minutes,\n        seconds;\n      setInterval(function () {\n        minutes = parseInt((timer / 60).toString(), 10);\n        seconds = parseInt((timer % 60).toString(), 10);\n        minutes = minutes < 10 ? \"0\" + minutes : minutes;\n        seconds = seconds < 10 ? \"0\" + seconds : seconds;\n        this.timer = minutes + \":\" + seconds;\n        if (--timer < 0) {\n          timer = duration;\n        }\n      }, 1000);\n    },\n\n    submitDocument(index, doc, action) {\n      // console.log(\"Testing\" + index);\n      this.documentModel.fileUpload.username = `${this.currentOrganisation.organisationName\n        }_${doc.documentTypeName.replace(/[^a-zA-Z ]/g, \"\")}_${Math.random()} `;\n      this.documentModel.fileUpload.base64 = this.files[index];\n      this.documentModel.document.documentDocumentTypeId = doc.documentTypeId;\n      this.documentModel.document.documentName = doc.documentTypeName\n      if (action === \"UPDATE\") {\n        // this.progressBarArr[index].value = true;\n        // console.log(\"Conditions>> \", this.progressBarArr[index].value);\n        this.documentModel.document.documentId = doc.documentId;\n        StoreUtils.dispatch(\n          StoreUtils.actions.document.updateDocument,\n          this.documentModel\n        );\n      } else {\n        // this.progressBarArr[index].value = true;\n        StoreUtils.dispatch(\n          StoreUtils.actions.document.createDocument,\n          this.documentModel\n        );\n\n        // console.log(this.files[index]);\n      }\n    },\n\n\n    regenerateApiKey() {\n      StoreUtils.dispatch(\n        StoreUtils.actions.apiKey.regenerateApiKey,\n        this.apikeyModel\n      ).then(() => {\n        this.$bvModal.hide(\"modal-sm\");\n      });\n    },\n\n    closeModal0() {\n      this.modals.modal0 = false;\n      this.blacklist = false;\n    },\n\n    file() {\n      this.edit = \"second\";\n    },\n\n    handleClick(tab, event) {\n      //console.log(tab.$vnode.key);\n      // console.log(tab.label);\n      //console.log(tab, event);\n    },\n\n    readColumn() {\n      this.$store.dispatch(\n        \"readColumn\",\n        {\n          item: this.item_report,\n        },\n        { root: false }\n      );\n    },\n\n    showUploadModal(_director){\n      if (_director === 1){\n        this.showModal = !this.showModal\n      }else{\n        this.showModal = !this.showModal\n      }\n\n    },\n\n    hide$show() {\n      let b = document.getElementById(\"pwd\");\n      let eye = document.getElementById(\"eye\");\n      let b2 = document.getElementById(\"pwd2\");\n      let b3 = document.getElementById(\"pwd3\");\n      if (b.type === \"password\") {\n        b.type = \"text\";\n        eye.classList.remove(\"fa-eye\");\n        eye.classList.add(\"fa-eye-slash\");\n      } else {\n        b.type = \"password\";\n        eye.classList.add(\"fa-eye\");\n        eye.classList.remove(\"fa-eye-slash\");\n      }\n      if (b2.type === \"password\") {\n        b2.type = \"text\";\n        b3.type = \"text\";\n      } else {\n        b2.type = \"password\";\n        b3.type = \"password\";\n\n      }\n    },\n  },\n\n  created: function () { },\n};\n</script>\n<style lang=\"css\" scoped>\n\n.preference-form{\n  width:70%;\n  align-items:center;\n  justify-content:center;\n  display: flex;\n  flex-direction: column;\n  padding:1%;\n  margin: 1%;\n\n}\n\n/*.cover-overlay{*/\n/*  width: auto;*/\n/*  height: 100vh;*/\n/*  background-color: transparent;*/\n/*  position: absolute;*/\n/*  z-index: 9999999999;*/\n/*  border: solid red;*/\n/*}*/\n\n.preference-item{\n  width:100%;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  padding: 1%;\n  box-shadow: 0 1px 2px hsl(0deg 0% 0% / 20%);\n\n  /*background-color: whitesmoke;*/\n\n}\n.preference-area{\n  width: 100%;\n  display: flex;\n  /*margin: 5%;*/\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n}\n\n.org-info{\n  display: flex;\n  justify-content: space-between;\n  box-shadow: 0 1px 2px hsl(0deg 0% 0% / 20%);\n  padding: 10px;\n  width: 90%;\n  margin:10px auto;\n}\n\n.org-info > div {\n  font-size: 16px;\n  font-family: 'sans-serif';\n}\n\n.box-card > h4{\n  font-size: 14px;\n  float: left;\n  width: 100%;\n  padding: 10px;\n\n}\n\nh2 {\n  width: 100%;\n  text-align: center;\n  border-bottom: 1px solid #000;\n  line-height: 0.1em;\n  margin: 10px 0 20px;\n}\n\nh2 span {\n  background:#fff;\n  padding:0 10px;\n}\n\n.settings-wrap {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgb(255,255,255);\n}\n\n/*.body {*/\n/*  min-height: 80vh*/\n/*}*/\n\n.skeletonLoader{}\n\n.animateSkeleton{\n  width:50%;\n  height: 30px;\n  /*background-color: gray;*/\n  background:linear-gradient(90deg, rgba(55, 255, 255, 0.01) 0, rgba(255, 255, 255, 0.16) 20%, rgba(248, 247, 247, 0.5) 60%, rgb(255, 255, 255));\n  animation: blink 1s infinite;\n}\n\n@keyframes blink {\n  100% {\n    transform: translateX(100%);\n  }\n}\n\n@media screen and (prefers-reduced-motion: reduce) {\n  .animateSkeleton::after {\n    animation: none;\n  }\n}\n\n.doc{\n  overflow-x: scroll;\n}\n\n\n@keyframes spinner-border {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n\n/*input::-webkit-outer-spin-button,*/\n/*input::-webkit-inner-spin-button {*/\n/*  -webkit-appearance: none;*/\n/*  margin: 0;*/\n/*}*/\n.box-card{\n  background-color: white;\n  width: 100%;\n  box-shadow: 0 1px 2px hsl(0deg 0% 0% / 20%);\n\n}\n\n.bformedit {\n  width: 100%;\n  margin-top: 2%;\n}\n\n.document{\n  display: flex;\n  align-items: center;\n  flex-wrap: nowrap;\n  color:black;\n}\n\n.our-team {\n  padding: 40px;\n  width: 100%;\n  height: 25vh;\n  background-color: #ffffff80;\n  text-align: center;\n  overflow: hidden;\n  position: relative;\n  border-radius: 5%;\n  /*box-shadow: 0 0 1rem 0 rgb(136 152 170 / 15%);*/\n}\n\n\n.password-form {\n  width: 100%;\n  padding: 20px;\n\n}\n\n.personal-profile{\n  width: 100%;\n  display: flex;\n  justify-content: center;\n}\n\n.our-team .picture {\n  display: inline-block;\n  /* height: 20%;\n  width: 20%; */\n  margin-bottom: 10px;\n  z-index: 1;\n}\n\n.our-team .picture::before {\n  content: \"\";\n  /* width: 20%; */\n  height: 0;\n  border-radius: 0%;\n  background-color: #1369ce;\n  position: absolute;\n  bottom: 135%;\n  right: 0;\n  left: 0;\n  opacity: 0.9;\n  transform: scale(3);\n  transition: all 0.3s linear 0s;\n}\n\n.our-team .pic img {\n  /* width: 10%;\n  height: 20%; */\n  border-radius: 0%;\n  transform: scale(1);\n  transition: all 0.9s ease 0s;\n}\n\n.our-team .picture img {\n  width: 50%;\n  height: 50%;\n  border-radius: 0%;\n  transform: scale(1);\n  transition: all 0.9s ease 0s;\n}\n\n.our-team .title {\n  display: block;\n  font-size: 15px;\n  color: #4e5052;\n  text-transform: capitalize;\n}\n\n.form-group{\n  width: 90%;\n}\n\n.our-team .social {\n  width: 100%;\n  padding: 0;\n  margin: 0;\n  background-color: #56585c;\n  position: absolute;\n  bottom: -100px;\n  left: 0;\n  transition: all 0.5s ease 0s;\n}\n\n.our-team:hover .social {\n  bottom: 0;\n}\n\n.our-team .social li {\n  display: inline-block;\n}\n\n.our-team .social li a {\n  display: block;\n  padding: 10px;\n  font-size: 17px;\n  color: white;\n  transition: all 0.3s ease 0s;\n  text-decoration: none;\n}\n\n.our-team .social li a:hover {\n  color: #56585c;\n  background-color: #f7f5ec;\n}\n\n\n.spinner-border {\n  display: inline-block;\n  width: 1rem;\n  height: 1rem;\n  vertical-align: text-bottom;\n  border: 0.25em solid currentColor;\n  border-right-color: transparent;\n  border-radius: 50%;\n  -webkit-animation: spinner-border 0.75s linear infinite;\n  animation: spinner-border 0.75s linear infinite;\n}\n\n.pointer {\n  cursor: pointer;\n}\n\n.img-size {\n  width: 32px !important;\n  height: 32px !important;\n}\n.settings-wrap-2nd{\n  width: 60%;\n}\n\n\n@media (max-width:999px) {\n  .settings-wrap-2nd{\n    width: 100%;\n  }\n  .document{\n    display: flex;\n    align-items: center;\n    flex-wrap: nowrap;\n    color:black;\n    width: 300px;\n  }\n\n  .bformedit {\n    width: 100%;\n    margin: 2%;\n  }\n  form{\n    width: 100% !important;\n  }\n  .form-group{\n    width: 100%;\n  }\n  .password-form {\n    width: 100%;\n    padding: 20px;\n\n  }\n  .settings-wrap {\n    flex-direction: column-reverse;\n  }\n}\n\n</style>\n"]}]}